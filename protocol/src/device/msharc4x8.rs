//
// This file is generated by `minidsp-devtools codegen`. DO NOT EDIT.
//
use super::*;
pub mod sym {
    #[allow(dead_code)]
    pub const D_GAIN_1_0_STATUS: u16 = 0;
    pub const D_GAIN_2_0_STATUS: u16 = 1;
    pub const D_GAIN_3_0_STATUS: u16 = 2;
    pub const D_GAIN_4_0_STATUS: u16 = 3;
    pub const D_GAIN_5_0_STATUS: u16 = 4;
    pub const D_GAIN_6_0_STATUS: u16 = 5;
    pub const D_GAIN_7_0_STATUS: u16 = 6;
    pub const D_GAIN_8_0_STATUS: u16 = 7;
    pub const D_GAIN_9_0_STATUS: u16 = 8;
    pub const D_GAIN_10_0_STATUS: u16 = 9;
    pub const D_GAIN_11_0_STATUS: u16 = 10;
    pub const D_GAIN_12_0_STATUS: u16 = 11;
    pub const MIXER_NX_M_SMOOTHED_1_0_0_STATUS: u16 = 12;
    pub const MIXER_NX_M_SMOOTHED_1_0_1_STATUS: u16 = 13;
    pub const MIXER_NX_M_SMOOTHED_1_0_2_STATUS: u16 = 14;
    pub const MIXER_NX_M_SMOOTHED_1_0_3_STATUS: u16 = 15;
    pub const MIXER_NX_M_SMOOTHED_1_0_4_STATUS: u16 = 16;
    pub const MIXER_NX_M_SMOOTHED_1_0_5_STATUS: u16 = 17;
    pub const MIXER_NX_M_SMOOTHED_1_0_6_STATUS: u16 = 18;
    pub const MIXER_NX_M_SMOOTHED_1_0_7_STATUS: u16 = 19;
    pub const MIXER_NX_M_SMOOTHED_1_1_0_STATUS: u16 = 20;
    pub const MIXER_NX_M_SMOOTHED_1_1_1_STATUS: u16 = 21;
    pub const MIXER_NX_M_SMOOTHED_1_1_2_STATUS: u16 = 22;
    pub const MIXER_NX_M_SMOOTHED_1_1_3_STATUS: u16 = 23;
    pub const MIXER_NX_M_SMOOTHED_1_1_4_STATUS: u16 = 24;
    pub const MIXER_NX_M_SMOOTHED_1_1_5_STATUS: u16 = 25;
    pub const MIXER_NX_M_SMOOTHED_1_1_6_STATUS: u16 = 26;
    pub const MIXER_NX_M_SMOOTHED_1_1_7_STATUS: u16 = 27;
    pub const MIXER_NX_M_SMOOTHED_1_2_0_STATUS: u16 = 28;
    pub const MIXER_NX_M_SMOOTHED_1_2_1_STATUS: u16 = 29;
    pub const MIXER_NX_M_SMOOTHED_1_2_2_STATUS: u16 = 30;
    pub const MIXER_NX_M_SMOOTHED_1_2_3_STATUS: u16 = 31;
    pub const MIXER_NX_M_SMOOTHED_1_2_4_STATUS: u16 = 32;
    pub const MIXER_NX_M_SMOOTHED_1_2_5_STATUS: u16 = 33;
    pub const MIXER_NX_M_SMOOTHED_1_2_6_STATUS: u16 = 34;
    pub const MIXER_NX_M_SMOOTHED_1_2_7_STATUS: u16 = 35;
    pub const MIXER_NX_M_SMOOTHED_1_3_0_STATUS: u16 = 36;
    pub const MIXER_NX_M_SMOOTHED_1_3_1_STATUS: u16 = 37;
    pub const MIXER_NX_M_SMOOTHED_1_3_2_STATUS: u16 = 38;
    pub const MIXER_NX_M_SMOOTHED_1_3_3_STATUS: u16 = 39;
    pub const MIXER_NX_M_SMOOTHED_1_3_4_STATUS: u16 = 40;
    pub const MIXER_NX_M_SMOOTHED_1_3_5_STATUS: u16 = 41;
    pub const MIXER_NX_M_SMOOTHED_1_3_6_STATUS: u16 = 42;
    pub const MIXER_NX_M_SMOOTHED_1_3_7_STATUS: u16 = 43;
    pub const FIR_5_0_STATUS: u16 = 44;
    pub const FIR_6_0_STATUS: u16 = 45;
    pub const FIR_7_0_STATUS: u16 = 46;
    pub const FIR_8_0_STATUS: u16 = 47;
    pub const FIR_9_0_STATUS: u16 = 48;
    pub const FIR_10_0_STATUS: u16 = 49;
    pub const FIR_11_0_STATUS: u16 = 50;
    pub const FIR_12_0_STATUS: u16 = 51;
    pub const DELAY_5_0_STATUS: u16 = 52;
    pub const DELAY_6_0_STATUS: u16 = 53;
    pub const DELAY_7_0_STATUS: u16 = 54;
    pub const DELAY_8_0_STATUS: u16 = 55;
    pub const DELAY_9_0_STATUS: u16 = 56;
    pub const DELAY_10_0_STATUS: u16 = 57;
    pub const DELAY_11_0_STATUS: u16 = 58;
    pub const DELAY_12_0_STATUS: u16 = 59;
    pub const COMP_5_0_STATUS: u16 = 60;
    pub const COMP_6_0_STATUS: u16 = 61;
    pub const COMP_7_0_STATUS: u16 = 62;
    pub const COMP_8_0_STATUS: u16 = 63;
    pub const COMP_9_0_STATUS: u16 = 64;
    pub const COMP_10_0_STATUS: u16 = 65;
    pub const COMP_11_0_STATUS: u16 = 66;
    pub const COMP_12_0_STATUS: u16 = 67;
    pub const D_GAIN_1_0: u16 = 68;
    pub const D_GAIN_2_0: u16 = 69;
    pub const D_GAIN_3_0: u16 = 70;
    pub const D_GAIN_4_0: u16 = 71;
    pub const D_GAIN_5_0: u16 = 72;
    pub const D_GAIN_6_0: u16 = 73;
    pub const D_GAIN_7_0: u16 = 74;
    pub const D_GAIN_8_0: u16 = 75;
    pub const D_GAIN_9_0: u16 = 76;
    pub const D_GAIN_10_0: u16 = 77;
    pub const D_GAIN_11_0: u16 = 78;
    pub const D_GAIN_12_0: u16 = 79;
    pub const MIXER_NX_M_SMOOTHED_1_0_0: u16 = 80;
    pub const MIXER_NX_M_SMOOTHED_1_0_1: u16 = 81;
    pub const MIXER_NX_M_SMOOTHED_1_0_2: u16 = 82;
    pub const MIXER_NX_M_SMOOTHED_1_0_3: u16 = 83;
    pub const MIXER_NX_M_SMOOTHED_1_0_4: u16 = 84;
    pub const MIXER_NX_M_SMOOTHED_1_0_5: u16 = 85;
    pub const MIXER_NX_M_SMOOTHED_1_0_6: u16 = 86;
    pub const MIXER_NX_M_SMOOTHED_1_0_7: u16 = 87;
    pub const MIXER_NX_M_SMOOTHED_1_1_0: u16 = 88;
    pub const MIXER_NX_M_SMOOTHED_1_1_1: u16 = 89;
    pub const MIXER_NX_M_SMOOTHED_1_1_2: u16 = 90;
    pub const MIXER_NX_M_SMOOTHED_1_1_3: u16 = 91;
    pub const MIXER_NX_M_SMOOTHED_1_1_4: u16 = 92;
    pub const MIXER_NX_M_SMOOTHED_1_1_5: u16 = 93;
    pub const MIXER_NX_M_SMOOTHED_1_1_6: u16 = 94;
    pub const MIXER_NX_M_SMOOTHED_1_1_7: u16 = 95;
    pub const MIXER_NX_M_SMOOTHED_1_2_0: u16 = 96;
    pub const MIXER_NX_M_SMOOTHED_1_2_1: u16 = 97;
    pub const MIXER_NX_M_SMOOTHED_1_2_2: u16 = 98;
    pub const MIXER_NX_M_SMOOTHED_1_2_3: u16 = 99;
    pub const MIXER_NX_M_SMOOTHED_1_2_4: u16 = 100;
    pub const MIXER_NX_M_SMOOTHED_1_2_5: u16 = 101;
    pub const MIXER_NX_M_SMOOTHED_1_2_6: u16 = 102;
    pub const MIXER_NX_M_SMOOTHED_1_2_7: u16 = 103;
    pub const MIXER_NX_M_SMOOTHED_1_3_0: u16 = 104;
    pub const MIXER_NX_M_SMOOTHED_1_3_1: u16 = 105;
    pub const MIXER_NX_M_SMOOTHED_1_3_2: u16 = 106;
    pub const MIXER_NX_M_SMOOTHED_1_3_3: u16 = 107;
    pub const MIXER_NX_M_SMOOTHED_1_3_4: u16 = 108;
    pub const MIXER_NX_M_SMOOTHED_1_3_5: u16 = 109;
    pub const MIXER_NX_M_SMOOTHED_1_3_6: u16 = 110;
    pub const MIXER_NX_M_SMOOTHED_1_3_7: u16 = 111;
    pub const COMP_5_0_THRESHOLD: u16 = 112;
    pub const COMP_5_0_GAIN: u16 = 113;
    pub const COMP_5_0_RATIO: u16 = 114;
    pub const COMP_5_0_KNEE: u16 = 115;
    pub const COMP_5_0_ATIME: u16 = 116;
    pub const COMP_5_0_RTIME: u16 = 117;
    pub const COMP_6_0_THRESHOLD: u16 = 118;
    pub const COMP_6_0_GAIN: u16 = 119;
    pub const COMP_6_0_RATIO: u16 = 120;
    pub const COMP_6_0_KNEE: u16 = 121;
    pub const COMP_6_0_ATIME: u16 = 122;
    pub const COMP_6_0_RTIME: u16 = 123;
    pub const COMP_7_0_THRESHOLD: u16 = 124;
    pub const COMP_7_0_GAIN: u16 = 125;
    pub const COMP_7_0_RATIO: u16 = 126;
    pub const COMP_7_0_KNEE: u16 = 127;
    pub const COMP_7_0_ATIME: u16 = 128;
    pub const COMP_7_0_RTIME: u16 = 129;
    pub const COMP_8_0_THRESHOLD: u16 = 130;
    pub const COMP_8_0_GAIN: u16 = 131;
    pub const COMP_8_0_RATIO: u16 = 132;
    pub const COMP_8_0_KNEE: u16 = 133;
    pub const COMP_8_0_ATIME: u16 = 134;
    pub const COMP_8_0_RTIME: u16 = 135;
    pub const COMP_9_0_THRESHOLD: u16 = 136;
    pub const COMP_9_0_GAIN: u16 = 137;
    pub const COMP_9_0_RATIO: u16 = 138;
    pub const COMP_9_0_KNEE: u16 = 139;
    pub const COMP_9_0_ATIME: u16 = 140;
    pub const COMP_9_0_RTIME: u16 = 141;
    pub const COMP_10_0_THRESHOLD: u16 = 142;
    pub const COMP_10_0_GAIN: u16 = 143;
    pub const COMP_10_0_RATIO: u16 = 144;
    pub const COMP_10_0_KNEE: u16 = 145;
    pub const COMP_10_0_ATIME: u16 = 146;
    pub const COMP_10_0_RTIME: u16 = 147;
    pub const COMP_11_0_THRESHOLD: u16 = 148;
    pub const COMP_11_0_GAIN: u16 = 149;
    pub const COMP_11_0_RATIO: u16 = 150;
    pub const COMP_11_0_KNEE: u16 = 151;
    pub const COMP_11_0_ATIME: u16 = 152;
    pub const COMP_11_0_RTIME: u16 = 153;
    pub const COMP_12_0_THRESHOLD: u16 = 154;
    pub const COMP_12_0_GAIN: u16 = 155;
    pub const COMP_12_0_RATIO: u16 = 156;
    pub const COMP_12_0_KNEE: u16 = 157;
    pub const COMP_12_0_ATIME: u16 = 158;
    pub const COMP_12_0_RTIME: u16 = 159;
    pub const DELAY_5_0: u16 = 160;
    pub const DELAY_6_0: u16 = 161;
    pub const DELAY_7_0: u16 = 162;
    pub const DELAY_8_0: u16 = 163;
    pub const DELAY_9_0: u16 = 164;
    pub const DELAY_10_0: u16 = 165;
    pub const DELAY_11_0: u16 = 166;
    pub const DELAY_12_0: u16 = 167;
    pub const METER_10_C1_0: u16 = 168;
    pub const METER_10_C1_1: u16 = 169;
    pub const METER_10_C1_2: u16 = 170;
    pub const METER_10_C1_3: u16 = 171;
    pub const METER_10_C1_4: u16 = 172;
    pub const METER_10_C1_5: u16 = 173;
    pub const METER_10_C1_6: u16 = 174;
    pub const METER_10_C1_7: u16 = 175;
    pub const METER_10_C2_0: u16 = 176;
    pub const METER_10_C2_1: u16 = 177;
    pub const METER_10_C2_2: u16 = 178;
    pub const METER_10_C2_3: u16 = 179;
    pub const METER_10_C2_4: u16 = 180;
    pub const METER_10_C2_5: u16 = 181;
    pub const METER_10_C2_6: u16 = 182;
    pub const METER_10_C2_7: u16 = 183;
    pub const METER_04_C1_0: u16 = 184;
    pub const METER_04_C1_1: u16 = 185;
    pub const METER_04_C1_2: u16 = 186;
    pub const METER_04_C1_3: u16 = 187;
    pub const POLARITY_IN_1_0: u16 = 188;
    pub const POLARITY_IN_1_1: u16 = 189;
    pub const POLARITY_IN_1_2: u16 = 190;
    pub const POLARITY_IN_1_3: u16 = 191;
    pub const POLARITY_OUT_1_4: u16 = 192;
    pub const POLARITY_OUT_1_5: u16 = 193;
    pub const POLARITY_OUT_1_6: u16 = 194;
    pub const POLARITY_OUT_1_7: u16 = 195;
    pub const POLARITY_OUT_1_8: u16 = 196;
    pub const POLARITY_OUT_1_9: u16 = 197;
    pub const POLARITY_OUT_1_10: u16 = 198;
    pub const POLARITY_OUT_1_11: u16 = 199;
    pub const FIR_5_0_TAPS: u16 = 200;
    pub const FIR_5_0: u16 = 201;
    pub const FIR_6_0_TAPS: u16 = 2249;
    pub const FIR_6_0: u16 = 2250;
    pub const FIR_7_0_TAPS: u16 = 4298;
    pub const FIR_7_0: u16 = 4299;
    pub const FIR_8_0_TAPS: u16 = 6347;
    pub const FIR_8_0: u16 = 6348;
    pub const FIR_9_0_TAPS: u16 = 8396;
    pub const FIR_9_0: u16 = 8397;
    pub const FIR_10_0_TAPS: u16 = 10445;
    pub const FIR_10_0: u16 = 10446;
    pub const FIR_11_0_TAPS: u16 = 12494;
    pub const FIR_11_0: u16 = 12495;
    pub const FIR_12_0_TAPS: u16 = 14543;
    pub const FIR_12_0: u16 = 14544;
    pub const PEQ_1_1: u16 = 16592;
    pub const PEQ_1_2: u16 = 16597;
    pub const PEQ_1_3: u16 = 16602;
    pub const PEQ_1_4: u16 = 16607;
    pub const PEQ_1_5: u16 = 16612;
    pub const PEQ_1_6: u16 = 16617;
    pub const PEQ_1_7: u16 = 16622;
    pub const PEQ_1_8: u16 = 16627;
    pub const PEQ_1_9: u16 = 16632;
    pub const PEQ_1_10: u16 = 16637;
    pub const PEQ_2_1: u16 = 16642;
    pub const PEQ_2_2: u16 = 16647;
    pub const PEQ_2_3: u16 = 16652;
    pub const PEQ_2_4: u16 = 16657;
    pub const PEQ_2_5: u16 = 16662;
    pub const PEQ_2_6: u16 = 16667;
    pub const PEQ_2_7: u16 = 16672;
    pub const PEQ_2_8: u16 = 16677;
    pub const PEQ_2_9: u16 = 16682;
    pub const PEQ_2_10: u16 = 16687;
    pub const PEQ_3_1: u16 = 16692;
    pub const PEQ_3_2: u16 = 16697;
    pub const PEQ_3_3: u16 = 16702;
    pub const PEQ_3_4: u16 = 16707;
    pub const PEQ_3_5: u16 = 16712;
    pub const PEQ_3_6: u16 = 16717;
    pub const PEQ_3_7: u16 = 16722;
    pub const PEQ_3_8: u16 = 16727;
    pub const PEQ_3_9: u16 = 16732;
    pub const PEQ_3_10: u16 = 16737;
    pub const PEQ_4_1: u16 = 16742;
    pub const PEQ_4_2: u16 = 16747;
    pub const PEQ_4_3: u16 = 16752;
    pub const PEQ_4_4: u16 = 16757;
    pub const PEQ_4_5: u16 = 16762;
    pub const PEQ_4_6: u16 = 16767;
    pub const PEQ_4_7: u16 = 16772;
    pub const PEQ_4_8: u16 = 16777;
    pub const PEQ_4_9: u16 = 16782;
    pub const PEQ_4_10: u16 = 16787;
    pub const PEQ_5_1: u16 = 16792;
    pub const PEQ_5_2: u16 = 16797;
    pub const PEQ_5_3: u16 = 16802;
    pub const PEQ_5_4: u16 = 16807;
    pub const PEQ_5_5: u16 = 16812;
    pub const PEQ_5_6: u16 = 16817;
    pub const PEQ_5_7: u16 = 16822;
    pub const PEQ_5_8: u16 = 16827;
    pub const PEQ_5_9: u16 = 16832;
    pub const PEQ_5_10: u16 = 16837;
    pub const PEQ_6_1: u16 = 16842;
    pub const PEQ_6_2: u16 = 16847;
    pub const PEQ_6_3: u16 = 16852;
    pub const PEQ_6_4: u16 = 16857;
    pub const PEQ_6_5: u16 = 16862;
    pub const PEQ_6_6: u16 = 16867;
    pub const PEQ_6_7: u16 = 16872;
    pub const PEQ_6_8: u16 = 16877;
    pub const PEQ_6_9: u16 = 16882;
    pub const PEQ_6_10: u16 = 16887;
    pub const PEQ_7_1: u16 = 16892;
    pub const PEQ_7_2: u16 = 16897;
    pub const PEQ_7_3: u16 = 16902;
    pub const PEQ_7_4: u16 = 16907;
    pub const PEQ_7_5: u16 = 16912;
    pub const PEQ_7_6: u16 = 16917;
    pub const PEQ_7_7: u16 = 16922;
    pub const PEQ_7_8: u16 = 16927;
    pub const PEQ_7_9: u16 = 16932;
    pub const PEQ_7_10: u16 = 16937;
    pub const PEQ_8_1: u16 = 16942;
    pub const PEQ_8_2: u16 = 16947;
    pub const PEQ_8_3: u16 = 16952;
    pub const PEQ_8_4: u16 = 16957;
    pub const PEQ_8_5: u16 = 16962;
    pub const PEQ_8_6: u16 = 16967;
    pub const PEQ_8_7: u16 = 16972;
    pub const PEQ_8_8: u16 = 16977;
    pub const PEQ_8_9: u16 = 16982;
    pub const PEQ_8_10: u16 = 16987;
    pub const PEQ_9_1: u16 = 16992;
    pub const PEQ_9_2: u16 = 16997;
    pub const PEQ_9_3: u16 = 17002;
    pub const PEQ_9_4: u16 = 17007;
    pub const PEQ_9_5: u16 = 17012;
    pub const PEQ_9_6: u16 = 17017;
    pub const PEQ_9_7: u16 = 17022;
    pub const PEQ_9_8: u16 = 17027;
    pub const PEQ_9_9: u16 = 17032;
    pub const PEQ_9_10: u16 = 17037;
    pub const PEQ_10_1: u16 = 17042;
    pub const PEQ_10_2: u16 = 17047;
    pub const PEQ_10_3: u16 = 17052;
    pub const PEQ_10_4: u16 = 17057;
    pub const PEQ_10_5: u16 = 17062;
    pub const PEQ_10_6: u16 = 17067;
    pub const PEQ_10_7: u16 = 17072;
    pub const PEQ_10_8: u16 = 17077;
    pub const PEQ_10_9: u16 = 17082;
    pub const PEQ_10_10: u16 = 17087;
    pub const PEQ_11_1: u16 = 17092;
    pub const PEQ_11_2: u16 = 17097;
    pub const PEQ_11_3: u16 = 17102;
    pub const PEQ_11_4: u16 = 17107;
    pub const PEQ_11_5: u16 = 17112;
    pub const PEQ_11_6: u16 = 17117;
    pub const PEQ_11_7: u16 = 17122;
    pub const PEQ_11_8: u16 = 17127;
    pub const PEQ_11_9: u16 = 17132;
    pub const PEQ_11_10: u16 = 17137;
    pub const PEQ_12_1: u16 = 17142;
    pub const PEQ_12_2: u16 = 17147;
    pub const PEQ_12_3: u16 = 17152;
    pub const PEQ_12_4: u16 = 17157;
    pub const PEQ_12_5: u16 = 17162;
    pub const PEQ_12_6: u16 = 17167;
    pub const PEQ_12_7: u16 = 17172;
    pub const PEQ_12_8: u16 = 17177;
    pub const PEQ_12_9: u16 = 17182;
    pub const PEQ_12_10: u16 = 17187;
    pub const BPF_5_1: u16 = 17192;
    pub const BPF_5_5: u16 = 17212;
    pub const BPF_6_1: u16 = 17232;
    pub const BPF_6_5: u16 = 17252;
    pub const BPF_7_1: u16 = 17272;
    pub const BPF_7_5: u16 = 17292;
    pub const BPF_8_1: u16 = 17312;
    pub const BPF_8_5: u16 = 17332;
    pub const BPF_9_1: u16 = 17352;
    pub const BPF_9_5: u16 = 17372;
    pub const BPF_10_1: u16 = 17392;
    pub const BPF_10_5: u16 = 17412;
    pub const BPF_11_1: u16 = 17432;
    pub const BPF_11_5: u16 = 17452;
    pub const BPF_12_1: u16 = 17472;
    pub const BPF_12_5: u16 = 17492;
    #[cfg(feature = "symbols")]
    pub const SYMBOLS: &[(&str, u16)] = &[
        ("D_GAIN_1_0_STATUS", D_GAIN_1_0_STATUS),
        ("D_GAIN_2_0_STATUS", D_GAIN_2_0_STATUS),
        ("D_GAIN_3_0_STATUS", D_GAIN_3_0_STATUS),
        ("D_GAIN_4_0_STATUS", D_GAIN_4_0_STATUS),
        ("D_GAIN_5_0_STATUS", D_GAIN_5_0_STATUS),
        ("D_GAIN_6_0_STATUS", D_GAIN_6_0_STATUS),
        ("D_GAIN_7_0_STATUS", D_GAIN_7_0_STATUS),
        ("D_GAIN_8_0_STATUS", D_GAIN_8_0_STATUS),
        ("D_GAIN_9_0_STATUS", D_GAIN_9_0_STATUS),
        ("D_GAIN_10_0_STATUS", D_GAIN_10_0_STATUS),
        ("D_GAIN_11_0_STATUS", D_GAIN_11_0_STATUS),
        ("D_GAIN_12_0_STATUS", D_GAIN_12_0_STATUS),
        (
            "MIXER_NX_M_SMOOTHED_1_0_0_STATUS",
            MIXER_NX_M_SMOOTHED_1_0_0_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_0_1_STATUS",
            MIXER_NX_M_SMOOTHED_1_0_1_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_0_2_STATUS",
            MIXER_NX_M_SMOOTHED_1_0_2_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_0_3_STATUS",
            MIXER_NX_M_SMOOTHED_1_0_3_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_0_4_STATUS",
            MIXER_NX_M_SMOOTHED_1_0_4_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_0_5_STATUS",
            MIXER_NX_M_SMOOTHED_1_0_5_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_0_6_STATUS",
            MIXER_NX_M_SMOOTHED_1_0_6_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_0_7_STATUS",
            MIXER_NX_M_SMOOTHED_1_0_7_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_1_0_STATUS",
            MIXER_NX_M_SMOOTHED_1_1_0_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_1_1_STATUS",
            MIXER_NX_M_SMOOTHED_1_1_1_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_1_2_STATUS",
            MIXER_NX_M_SMOOTHED_1_1_2_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_1_3_STATUS",
            MIXER_NX_M_SMOOTHED_1_1_3_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_1_4_STATUS",
            MIXER_NX_M_SMOOTHED_1_1_4_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_1_5_STATUS",
            MIXER_NX_M_SMOOTHED_1_1_5_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_1_6_STATUS",
            MIXER_NX_M_SMOOTHED_1_1_6_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_1_7_STATUS",
            MIXER_NX_M_SMOOTHED_1_1_7_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_2_0_STATUS",
            MIXER_NX_M_SMOOTHED_1_2_0_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_2_1_STATUS",
            MIXER_NX_M_SMOOTHED_1_2_1_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_2_2_STATUS",
            MIXER_NX_M_SMOOTHED_1_2_2_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_2_3_STATUS",
            MIXER_NX_M_SMOOTHED_1_2_3_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_2_4_STATUS",
            MIXER_NX_M_SMOOTHED_1_2_4_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_2_5_STATUS",
            MIXER_NX_M_SMOOTHED_1_2_5_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_2_6_STATUS",
            MIXER_NX_M_SMOOTHED_1_2_6_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_2_7_STATUS",
            MIXER_NX_M_SMOOTHED_1_2_7_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_3_0_STATUS",
            MIXER_NX_M_SMOOTHED_1_3_0_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_3_1_STATUS",
            MIXER_NX_M_SMOOTHED_1_3_1_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_3_2_STATUS",
            MIXER_NX_M_SMOOTHED_1_3_2_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_3_3_STATUS",
            MIXER_NX_M_SMOOTHED_1_3_3_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_3_4_STATUS",
            MIXER_NX_M_SMOOTHED_1_3_4_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_3_5_STATUS",
            MIXER_NX_M_SMOOTHED_1_3_5_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_3_6_STATUS",
            MIXER_NX_M_SMOOTHED_1_3_6_STATUS,
        ),
        (
            "MIXER_NX_M_SMOOTHED_1_3_7_STATUS",
            MIXER_NX_M_SMOOTHED_1_3_7_STATUS,
        ),
        ("FIR_5_0_STATUS", FIR_5_0_STATUS),
        ("FIR_6_0_STATUS", FIR_6_0_STATUS),
        ("FIR_7_0_STATUS", FIR_7_0_STATUS),
        ("FIR_8_0_STATUS", FIR_8_0_STATUS),
        ("FIR_9_0_STATUS", FIR_9_0_STATUS),
        ("FIR_10_0_STATUS", FIR_10_0_STATUS),
        ("FIR_11_0_STATUS", FIR_11_0_STATUS),
        ("FIR_12_0_STATUS", FIR_12_0_STATUS),
        ("DELAY_5_0_STATUS", DELAY_5_0_STATUS),
        ("DELAY_6_0_STATUS", DELAY_6_0_STATUS),
        ("DELAY_7_0_STATUS", DELAY_7_0_STATUS),
        ("DELAY_8_0_STATUS", DELAY_8_0_STATUS),
        ("DELAY_9_0_STATUS", DELAY_9_0_STATUS),
        ("DELAY_10_0_STATUS", DELAY_10_0_STATUS),
        ("DELAY_11_0_STATUS", DELAY_11_0_STATUS),
        ("DELAY_12_0_STATUS", DELAY_12_0_STATUS),
        ("COMP_5_0_STATUS", COMP_5_0_STATUS),
        ("COMP_6_0_STATUS", COMP_6_0_STATUS),
        ("COMP_7_0_STATUS", COMP_7_0_STATUS),
        ("COMP_8_0_STATUS", COMP_8_0_STATUS),
        ("COMP_9_0_STATUS", COMP_9_0_STATUS),
        ("COMP_10_0_STATUS", COMP_10_0_STATUS),
        ("COMP_11_0_STATUS", COMP_11_0_STATUS),
        ("COMP_12_0_STATUS", COMP_12_0_STATUS),
        ("D_GAIN_1_0", D_GAIN_1_0),
        ("D_GAIN_2_0", D_GAIN_2_0),
        ("D_GAIN_3_0", D_GAIN_3_0),
        ("D_GAIN_4_0", D_GAIN_4_0),
        ("D_GAIN_5_0", D_GAIN_5_0),
        ("D_GAIN_6_0", D_GAIN_6_0),
        ("D_GAIN_7_0", D_GAIN_7_0),
        ("D_GAIN_8_0", D_GAIN_8_0),
        ("D_GAIN_9_0", D_GAIN_9_0),
        ("D_GAIN_10_0", D_GAIN_10_0),
        ("D_GAIN_11_0", D_GAIN_11_0),
        ("D_GAIN_12_0", D_GAIN_12_0),
        ("MIXER_NX_M_SMOOTHED_1_0_0", MIXER_NX_M_SMOOTHED_1_0_0),
        ("MIXER_NX_M_SMOOTHED_1_0_1", MIXER_NX_M_SMOOTHED_1_0_1),
        ("MIXER_NX_M_SMOOTHED_1_0_2", MIXER_NX_M_SMOOTHED_1_0_2),
        ("MIXER_NX_M_SMOOTHED_1_0_3", MIXER_NX_M_SMOOTHED_1_0_3),
        ("MIXER_NX_M_SMOOTHED_1_0_4", MIXER_NX_M_SMOOTHED_1_0_4),
        ("MIXER_NX_M_SMOOTHED_1_0_5", MIXER_NX_M_SMOOTHED_1_0_5),
        ("MIXER_NX_M_SMOOTHED_1_0_6", MIXER_NX_M_SMOOTHED_1_0_6),
        ("MIXER_NX_M_SMOOTHED_1_0_7", MIXER_NX_M_SMOOTHED_1_0_7),
        ("MIXER_NX_M_SMOOTHED_1_1_0", MIXER_NX_M_SMOOTHED_1_1_0),
        ("MIXER_NX_M_SMOOTHED_1_1_1", MIXER_NX_M_SMOOTHED_1_1_1),
        ("MIXER_NX_M_SMOOTHED_1_1_2", MIXER_NX_M_SMOOTHED_1_1_2),
        ("MIXER_NX_M_SMOOTHED_1_1_3", MIXER_NX_M_SMOOTHED_1_1_3),
        ("MIXER_NX_M_SMOOTHED_1_1_4", MIXER_NX_M_SMOOTHED_1_1_4),
        ("MIXER_NX_M_SMOOTHED_1_1_5", MIXER_NX_M_SMOOTHED_1_1_5),
        ("MIXER_NX_M_SMOOTHED_1_1_6", MIXER_NX_M_SMOOTHED_1_1_6),
        ("MIXER_NX_M_SMOOTHED_1_1_7", MIXER_NX_M_SMOOTHED_1_1_7),
        ("MIXER_NX_M_SMOOTHED_1_2_0", MIXER_NX_M_SMOOTHED_1_2_0),
        ("MIXER_NX_M_SMOOTHED_1_2_1", MIXER_NX_M_SMOOTHED_1_2_1),
        ("MIXER_NX_M_SMOOTHED_1_2_2", MIXER_NX_M_SMOOTHED_1_2_2),
        ("MIXER_NX_M_SMOOTHED_1_2_3", MIXER_NX_M_SMOOTHED_1_2_3),
        ("MIXER_NX_M_SMOOTHED_1_2_4", MIXER_NX_M_SMOOTHED_1_2_4),
        ("MIXER_NX_M_SMOOTHED_1_2_5", MIXER_NX_M_SMOOTHED_1_2_5),
        ("MIXER_NX_M_SMOOTHED_1_2_6", MIXER_NX_M_SMOOTHED_1_2_6),
        ("MIXER_NX_M_SMOOTHED_1_2_7", MIXER_NX_M_SMOOTHED_1_2_7),
        ("MIXER_NX_M_SMOOTHED_1_3_0", MIXER_NX_M_SMOOTHED_1_3_0),
        ("MIXER_NX_M_SMOOTHED_1_3_1", MIXER_NX_M_SMOOTHED_1_3_1),
        ("MIXER_NX_M_SMOOTHED_1_3_2", MIXER_NX_M_SMOOTHED_1_3_2),
        ("MIXER_NX_M_SMOOTHED_1_3_3", MIXER_NX_M_SMOOTHED_1_3_3),
        ("MIXER_NX_M_SMOOTHED_1_3_4", MIXER_NX_M_SMOOTHED_1_3_4),
        ("MIXER_NX_M_SMOOTHED_1_3_5", MIXER_NX_M_SMOOTHED_1_3_5),
        ("MIXER_NX_M_SMOOTHED_1_3_6", MIXER_NX_M_SMOOTHED_1_3_6),
        ("MIXER_NX_M_SMOOTHED_1_3_7", MIXER_NX_M_SMOOTHED_1_3_7),
        ("COMP_5_0_THRESHOLD", COMP_5_0_THRESHOLD),
        ("COMP_5_0_GAIN", COMP_5_0_GAIN),
        ("COMP_5_0_RATIO", COMP_5_0_RATIO),
        ("COMP_5_0_KNEE", COMP_5_0_KNEE),
        ("COMP_5_0_ATIME", COMP_5_0_ATIME),
        ("COMP_5_0_RTIME", COMP_5_0_RTIME),
        ("COMP_6_0_THRESHOLD", COMP_6_0_THRESHOLD),
        ("COMP_6_0_GAIN", COMP_6_0_GAIN),
        ("COMP_6_0_RATIO", COMP_6_0_RATIO),
        ("COMP_6_0_KNEE", COMP_6_0_KNEE),
        ("COMP_6_0_ATIME", COMP_6_0_ATIME),
        ("COMP_6_0_RTIME", COMP_6_0_RTIME),
        ("COMP_7_0_THRESHOLD", COMP_7_0_THRESHOLD),
        ("COMP_7_0_GAIN", COMP_7_0_GAIN),
        ("COMP_7_0_RATIO", COMP_7_0_RATIO),
        ("COMP_7_0_KNEE", COMP_7_0_KNEE),
        ("COMP_7_0_ATIME", COMP_7_0_ATIME),
        ("COMP_7_0_RTIME", COMP_7_0_RTIME),
        ("COMP_8_0_THRESHOLD", COMP_8_0_THRESHOLD),
        ("COMP_8_0_GAIN", COMP_8_0_GAIN),
        ("COMP_8_0_RATIO", COMP_8_0_RATIO),
        ("COMP_8_0_KNEE", COMP_8_0_KNEE),
        ("COMP_8_0_ATIME", COMP_8_0_ATIME),
        ("COMP_8_0_RTIME", COMP_8_0_RTIME),
        ("COMP_9_0_THRESHOLD", COMP_9_0_THRESHOLD),
        ("COMP_9_0_GAIN", COMP_9_0_GAIN),
        ("COMP_9_0_RATIO", COMP_9_0_RATIO),
        ("COMP_9_0_KNEE", COMP_9_0_KNEE),
        ("COMP_9_0_ATIME", COMP_9_0_ATIME),
        ("COMP_9_0_RTIME", COMP_9_0_RTIME),
        ("COMP_10_0_THRESHOLD", COMP_10_0_THRESHOLD),
        ("COMP_10_0_GAIN", COMP_10_0_GAIN),
        ("COMP_10_0_RATIO", COMP_10_0_RATIO),
        ("COMP_10_0_KNEE", COMP_10_0_KNEE),
        ("COMP_10_0_ATIME", COMP_10_0_ATIME),
        ("COMP_10_0_RTIME", COMP_10_0_RTIME),
        ("COMP_11_0_THRESHOLD", COMP_11_0_THRESHOLD),
        ("COMP_11_0_GAIN", COMP_11_0_GAIN),
        ("COMP_11_0_RATIO", COMP_11_0_RATIO),
        ("COMP_11_0_KNEE", COMP_11_0_KNEE),
        ("COMP_11_0_ATIME", COMP_11_0_ATIME),
        ("COMP_11_0_RTIME", COMP_11_0_RTIME),
        ("COMP_12_0_THRESHOLD", COMP_12_0_THRESHOLD),
        ("COMP_12_0_GAIN", COMP_12_0_GAIN),
        ("COMP_12_0_RATIO", COMP_12_0_RATIO),
        ("COMP_12_0_KNEE", COMP_12_0_KNEE),
        ("COMP_12_0_ATIME", COMP_12_0_ATIME),
        ("COMP_12_0_RTIME", COMP_12_0_RTIME),
        ("DELAY_5_0", DELAY_5_0),
        ("DELAY_6_0", DELAY_6_0),
        ("DELAY_7_0", DELAY_7_0),
        ("DELAY_8_0", DELAY_8_0),
        ("DELAY_9_0", DELAY_9_0),
        ("DELAY_10_0", DELAY_10_0),
        ("DELAY_11_0", DELAY_11_0),
        ("DELAY_12_0", DELAY_12_0),
        ("METER_10_C1_0", METER_10_C1_0),
        ("METER_10_C1_1", METER_10_C1_1),
        ("METER_10_C1_2", METER_10_C1_2),
        ("METER_10_C1_3", METER_10_C1_3),
        ("METER_10_C1_4", METER_10_C1_4),
        ("METER_10_C1_5", METER_10_C1_5),
        ("METER_10_C1_6", METER_10_C1_6),
        ("METER_10_C1_7", METER_10_C1_7),
        ("METER_10_C2_0", METER_10_C2_0),
        ("METER_10_C2_1", METER_10_C2_1),
        ("METER_10_C2_2", METER_10_C2_2),
        ("METER_10_C2_3", METER_10_C2_3),
        ("METER_10_C2_4", METER_10_C2_4),
        ("METER_10_C2_5", METER_10_C2_5),
        ("METER_10_C2_6", METER_10_C2_6),
        ("METER_10_C2_7", METER_10_C2_7),
        ("METER_04_C1_0", METER_04_C1_0),
        ("METER_04_C1_1", METER_04_C1_1),
        ("METER_04_C1_2", METER_04_C1_2),
        ("METER_04_C1_3", METER_04_C1_3),
        ("POLARITY_IN_1_0", POLARITY_IN_1_0),
        ("POLARITY_IN_1_1", POLARITY_IN_1_1),
        ("POLARITY_IN_1_2", POLARITY_IN_1_2),
        ("POLARITY_IN_1_3", POLARITY_IN_1_3),
        ("POLARITY_OUT_1_4", POLARITY_OUT_1_4),
        ("POLARITY_OUT_1_5", POLARITY_OUT_1_5),
        ("POLARITY_OUT_1_6", POLARITY_OUT_1_6),
        ("POLARITY_OUT_1_7", POLARITY_OUT_1_7),
        ("POLARITY_OUT_1_8", POLARITY_OUT_1_8),
        ("POLARITY_OUT_1_9", POLARITY_OUT_1_9),
        ("POLARITY_OUT_1_10", POLARITY_OUT_1_10),
        ("POLARITY_OUT_1_11", POLARITY_OUT_1_11),
        ("FIR_5_0_TAPS", FIR_5_0_TAPS),
        ("FIR_5_0", FIR_5_0),
        ("FIR_6_0_TAPS", FIR_6_0_TAPS),
        ("FIR_6_0", FIR_6_0),
        ("FIR_7_0_TAPS", FIR_7_0_TAPS),
        ("FIR_7_0", FIR_7_0),
        ("FIR_8_0_TAPS", FIR_8_0_TAPS),
        ("FIR_8_0", FIR_8_0),
        ("FIR_9_0_TAPS", FIR_9_0_TAPS),
        ("FIR_9_0", FIR_9_0),
        ("FIR_10_0_TAPS", FIR_10_0_TAPS),
        ("FIR_10_0", FIR_10_0),
        ("FIR_11_0_TAPS", FIR_11_0_TAPS),
        ("FIR_11_0", FIR_11_0),
        ("FIR_12_0_TAPS", FIR_12_0_TAPS),
        ("FIR_12_0", FIR_12_0),
        ("PEQ_1_1", PEQ_1_1),
        ("PEQ_1_2", PEQ_1_2),
        ("PEQ_1_3", PEQ_1_3),
        ("PEQ_1_4", PEQ_1_4),
        ("PEQ_1_5", PEQ_1_5),
        ("PEQ_1_6", PEQ_1_6),
        ("PEQ_1_7", PEQ_1_7),
        ("PEQ_1_8", PEQ_1_8),
        ("PEQ_1_9", PEQ_1_9),
        ("PEQ_1_10", PEQ_1_10),
        ("PEQ_2_1", PEQ_2_1),
        ("PEQ_2_2", PEQ_2_2),
        ("PEQ_2_3", PEQ_2_3),
        ("PEQ_2_4", PEQ_2_4),
        ("PEQ_2_5", PEQ_2_5),
        ("PEQ_2_6", PEQ_2_6),
        ("PEQ_2_7", PEQ_2_7),
        ("PEQ_2_8", PEQ_2_8),
        ("PEQ_2_9", PEQ_2_9),
        ("PEQ_2_10", PEQ_2_10),
        ("PEQ_3_1", PEQ_3_1),
        ("PEQ_3_2", PEQ_3_2),
        ("PEQ_3_3", PEQ_3_3),
        ("PEQ_3_4", PEQ_3_4),
        ("PEQ_3_5", PEQ_3_5),
        ("PEQ_3_6", PEQ_3_6),
        ("PEQ_3_7", PEQ_3_7),
        ("PEQ_3_8", PEQ_3_8),
        ("PEQ_3_9", PEQ_3_9),
        ("PEQ_3_10", PEQ_3_10),
        ("PEQ_4_1", PEQ_4_1),
        ("PEQ_4_2", PEQ_4_2),
        ("PEQ_4_3", PEQ_4_3),
        ("PEQ_4_4", PEQ_4_4),
        ("PEQ_4_5", PEQ_4_5),
        ("PEQ_4_6", PEQ_4_6),
        ("PEQ_4_7", PEQ_4_7),
        ("PEQ_4_8", PEQ_4_8),
        ("PEQ_4_9", PEQ_4_9),
        ("PEQ_4_10", PEQ_4_10),
        ("PEQ_5_1", PEQ_5_1),
        ("PEQ_5_2", PEQ_5_2),
        ("PEQ_5_3", PEQ_5_3),
        ("PEQ_5_4", PEQ_5_4),
        ("PEQ_5_5", PEQ_5_5),
        ("PEQ_5_6", PEQ_5_6),
        ("PEQ_5_7", PEQ_5_7),
        ("PEQ_5_8", PEQ_5_8),
        ("PEQ_5_9", PEQ_5_9),
        ("PEQ_5_10", PEQ_5_10),
        ("PEQ_6_1", PEQ_6_1),
        ("PEQ_6_2", PEQ_6_2),
        ("PEQ_6_3", PEQ_6_3),
        ("PEQ_6_4", PEQ_6_4),
        ("PEQ_6_5", PEQ_6_5),
        ("PEQ_6_6", PEQ_6_6),
        ("PEQ_6_7", PEQ_6_7),
        ("PEQ_6_8", PEQ_6_8),
        ("PEQ_6_9", PEQ_6_9),
        ("PEQ_6_10", PEQ_6_10),
        ("PEQ_7_1", PEQ_7_1),
        ("PEQ_7_2", PEQ_7_2),
        ("PEQ_7_3", PEQ_7_3),
        ("PEQ_7_4", PEQ_7_4),
        ("PEQ_7_5", PEQ_7_5),
        ("PEQ_7_6", PEQ_7_6),
        ("PEQ_7_7", PEQ_7_7),
        ("PEQ_7_8", PEQ_7_8),
        ("PEQ_7_9", PEQ_7_9),
        ("PEQ_7_10", PEQ_7_10),
        ("PEQ_8_1", PEQ_8_1),
        ("PEQ_8_2", PEQ_8_2),
        ("PEQ_8_3", PEQ_8_3),
        ("PEQ_8_4", PEQ_8_4),
        ("PEQ_8_5", PEQ_8_5),
        ("PEQ_8_6", PEQ_8_6),
        ("PEQ_8_7", PEQ_8_7),
        ("PEQ_8_8", PEQ_8_8),
        ("PEQ_8_9", PEQ_8_9),
        ("PEQ_8_10", PEQ_8_10),
        ("PEQ_9_1", PEQ_9_1),
        ("PEQ_9_2", PEQ_9_2),
        ("PEQ_9_3", PEQ_9_3),
        ("PEQ_9_4", PEQ_9_4),
        ("PEQ_9_5", PEQ_9_5),
        ("PEQ_9_6", PEQ_9_6),
        ("PEQ_9_7", PEQ_9_7),
        ("PEQ_9_8", PEQ_9_8),
        ("PEQ_9_9", PEQ_9_9),
        ("PEQ_9_10", PEQ_9_10),
        ("PEQ_10_1", PEQ_10_1),
        ("PEQ_10_2", PEQ_10_2),
        ("PEQ_10_3", PEQ_10_3),
        ("PEQ_10_4", PEQ_10_4),
        ("PEQ_10_5", PEQ_10_5),
        ("PEQ_10_6", PEQ_10_6),
        ("PEQ_10_7", PEQ_10_7),
        ("PEQ_10_8", PEQ_10_8),
        ("PEQ_10_9", PEQ_10_9),
        ("PEQ_10_10", PEQ_10_10),
        ("PEQ_11_1", PEQ_11_1),
        ("PEQ_11_2", PEQ_11_2),
        ("PEQ_11_3", PEQ_11_3),
        ("PEQ_11_4", PEQ_11_4),
        ("PEQ_11_5", PEQ_11_5),
        ("PEQ_11_6", PEQ_11_6),
        ("PEQ_11_7", PEQ_11_7),
        ("PEQ_11_8", PEQ_11_8),
        ("PEQ_11_9", PEQ_11_9),
        ("PEQ_11_10", PEQ_11_10),
        ("PEQ_12_1", PEQ_12_1),
        ("PEQ_12_2", PEQ_12_2),
        ("PEQ_12_3", PEQ_12_3),
        ("PEQ_12_4", PEQ_12_4),
        ("PEQ_12_5", PEQ_12_5),
        ("PEQ_12_6", PEQ_12_6),
        ("PEQ_12_7", PEQ_12_7),
        ("PEQ_12_8", PEQ_12_8),
        ("PEQ_12_9", PEQ_12_9),
        ("PEQ_12_10", PEQ_12_10),
        ("BPF_5_1", BPF_5_1),
        ("BPF_5_5", BPF_5_5),
        ("BPF_6_1", BPF_6_1),
        ("BPF_6_5", BPF_6_5),
        ("BPF_7_1", BPF_7_1),
        ("BPF_7_5", BPF_7_5),
        ("BPF_8_1", BPF_8_1),
        ("BPF_8_5", BPF_8_5),
        ("BPF_9_1", BPF_9_1),
        ("BPF_9_5", BPF_9_5),
        ("BPF_10_1", BPF_10_1),
        ("BPF_10_5", BPF_10_5),
        ("BPF_11_1", BPF_11_1),
        ("BPF_11_5", BPF_11_5),
        ("BPF_12_1", BPF_12_1),
        ("BPF_12_5", BPF_12_5),
    ];
}
#[allow(unused_imports)]
use sym::*;
pub const DEVICE: Device = Device {
    product_name: "MiniSHARC 4x8",
    sources: &[],
    inputs: &[
        Input {
            gate: Some(Gate {
                enable: D_GAIN_1_0_STATUS,
                gain: D_GAIN_1_0,
            }),
            meter: Some(METER_04_C1_0),
            routing: &[
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_0_0_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_0_0,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_0_1_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_0_1,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_0_2_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_0_2,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_0_3_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_0_3,
                },
            ],
            peq: &[
                PEQ_1_10, PEQ_1_9, PEQ_1_8, PEQ_1_7, PEQ_1_6, PEQ_1_5, PEQ_1_4, PEQ_1_3, PEQ_1_2,
                PEQ_1_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_2_0_STATUS,
                gain: D_GAIN_2_0,
            }),
            meter: Some(METER_04_C1_1),
            routing: &[
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_1_0_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_1_0,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_1_1_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_1_1,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_1_2_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_1_2,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_1_3_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_1_3,
                },
            ],
            peq: &[
                PEQ_2_10, PEQ_2_9, PEQ_2_8, PEQ_2_7, PEQ_2_6, PEQ_2_5, PEQ_2_4, PEQ_2_3, PEQ_2_2,
                PEQ_2_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_3_0_STATUS,
                gain: D_GAIN_3_0,
            }),
            meter: Some(METER_04_C1_2),
            routing: &[
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_2_0_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_2_0,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_2_1_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_2_1,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_2_2_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_2_2,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_2_3_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_2_3,
                },
            ],
            peq: &[
                PEQ_3_10, PEQ_3_9, PEQ_3_8, PEQ_3_7, PEQ_3_6, PEQ_3_5, PEQ_3_4, PEQ_3_3, PEQ_3_2,
                PEQ_3_1,
            ],
        },
        Input {
            gate: Some(Gate {
                enable: D_GAIN_4_0_STATUS,
                gain: D_GAIN_4_0,
            }),
            meter: Some(METER_04_C1_3),
            routing: &[
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_3_0_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_3_0,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_3_1_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_3_1,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_3_2_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_3_2,
                },
                Gate {
                    enable: MIXER_NX_M_SMOOTHED_1_3_3_STATUS,
                    gain: MIXER_NX_M_SMOOTHED_1_3_3,
                },
            ],
            peq: &[
                PEQ_4_10, PEQ_4_9, PEQ_4_8, PEQ_4_7, PEQ_4_6, PEQ_4_5, PEQ_4_4, PEQ_4_3, PEQ_4_2,
                PEQ_4_1,
            ],
        },
    ],
    outputs: &[
        Output {
            gate: Gate {
                enable: D_GAIN_5_0_STATUS,
                gain: D_GAIN_5_0,
            },
            meter: METER_10_C2_0,
            delay_addr: DELAY_5_0,
            invert_addr: POLARITY_OUT_1_4,
            peq: &[
                PEQ_5_10, PEQ_5_9, PEQ_5_8, PEQ_5_7, PEQ_5_6, PEQ_5_5, PEQ_5_4, PEQ_5_3, PEQ_5_2,
                PEQ_5_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_5_1, BPF_5_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_5_0_STATUS,
                threshold: COMP_5_0_THRESHOLD,
                ratio: COMP_5_0_RATIO,
                attack: COMP_5_0_ATIME,
                release: COMP_5_0_RTIME,
                meter: Some(METER_10_C1_0),
            }),
            fir: Some(Fir {
                index: 0,
                bypass: FIR_5_0_STATUS,
                num_coefficients: FIR_5_0_TAPS,
                max_coefficients: 2048,
            }),
        },
        Output {
            gate: Gate {
                enable: D_GAIN_6_0_STATUS,
                gain: D_GAIN_6_0,
            },
            meter: METER_10_C2_1,
            delay_addr: DELAY_6_0,
            invert_addr: POLARITY_OUT_1_5,
            peq: &[
                PEQ_6_10, PEQ_6_9, PEQ_6_8, PEQ_6_7, PEQ_6_6, PEQ_6_5, PEQ_6_4, PEQ_6_3, PEQ_6_2,
                PEQ_6_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_6_1, BPF_6_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_6_0_STATUS,
                threshold: COMP_6_0_THRESHOLD,
                ratio: COMP_6_0_RATIO,
                attack: COMP_6_0_ATIME,
                release: COMP_6_0_RTIME,
                meter: Some(METER_10_C1_1),
            }),
            fir: Some(Fir {
                index: 1,
                bypass: FIR_6_0_STATUS,
                num_coefficients: FIR_6_0_TAPS,
                max_coefficients: 2048,
            }),
        },
        Output {
            gate: Gate {
                enable: D_GAIN_7_0_STATUS,
                gain: D_GAIN_7_0,
            },
            meter: METER_10_C2_2,
            delay_addr: DELAY_7_0,
            invert_addr: POLARITY_OUT_1_6,
            peq: &[
                PEQ_7_10, PEQ_7_9, PEQ_7_8, PEQ_7_7, PEQ_7_6, PEQ_7_5, PEQ_7_4, PEQ_7_3, PEQ_7_2,
                PEQ_7_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_7_1, BPF_7_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_7_0_STATUS,
                threshold: COMP_7_0_THRESHOLD,
                ratio: COMP_7_0_RATIO,
                attack: COMP_7_0_ATIME,
                release: COMP_7_0_RTIME,
                meter: Some(METER_10_C1_2),
            }),
            fir: Some(Fir {
                index: 2,
                bypass: FIR_7_0_STATUS,
                num_coefficients: FIR_7_0_TAPS,
                max_coefficients: 2048,
            }),
        },
        Output {
            gate: Gate {
                enable: D_GAIN_8_0_STATUS,
                gain: D_GAIN_8_0,
            },
            meter: METER_10_C2_3,
            delay_addr: DELAY_8_0,
            invert_addr: POLARITY_OUT_1_7,
            peq: &[
                PEQ_8_10, PEQ_8_9, PEQ_8_8, PEQ_8_7, PEQ_8_6, PEQ_8_5, PEQ_8_4, PEQ_8_3, PEQ_8_2,
                PEQ_8_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_8_1, BPF_8_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_8_0_STATUS,
                threshold: COMP_8_0_THRESHOLD,
                ratio: COMP_8_0_RATIO,
                attack: COMP_8_0_ATIME,
                release: COMP_8_0_RTIME,
                meter: Some(METER_10_C1_3),
            }),
            fir: Some(Fir {
                index: 3,
                bypass: FIR_8_0_STATUS,
                num_coefficients: FIR_8_0_TAPS,
                max_coefficients: 2048,
            }),
        },
        Output {
            gate: Gate {
                enable: D_GAIN_9_0_STATUS,
                gain: D_GAIN_9_0,
            },
            meter: METER_10_C2_4,
            delay_addr: DELAY_9_0,
            invert_addr: POLARITY_OUT_1_8,
            peq: &[
                PEQ_9_10, PEQ_9_9, PEQ_9_8, PEQ_9_7, PEQ_9_6, PEQ_9_5, PEQ_9_4, PEQ_9_3, PEQ_9_2,
                PEQ_9_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_9_1, BPF_9_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_9_0_STATUS,
                threshold: COMP_9_0_THRESHOLD,
                ratio: COMP_9_0_RATIO,
                attack: COMP_9_0_ATIME,
                release: COMP_9_0_RTIME,
                meter: Some(METER_10_C1_4),
            }),
            fir: Some(Fir {
                index: 4,
                bypass: FIR_9_0_STATUS,
                num_coefficients: FIR_9_0_TAPS,
                max_coefficients: 2048,
            }),
        },
        Output {
            gate: Gate {
                enable: D_GAIN_10_0_STATUS,
                gain: D_GAIN_10_0,
            },
            meter: METER_10_C2_5,
            delay_addr: DELAY_10_0,
            invert_addr: POLARITY_OUT_1_9,
            peq: &[
                PEQ_10_10, PEQ_10_9, PEQ_10_8, PEQ_10_7, PEQ_10_6, PEQ_10_5, PEQ_10_4, PEQ_10_3,
                PEQ_10_2, PEQ_10_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_10_1, BPF_10_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_10_0_STATUS,
                threshold: COMP_10_0_THRESHOLD,
                ratio: COMP_10_0_RATIO,
                attack: COMP_10_0_ATIME,
                release: COMP_10_0_RTIME,
                meter: Some(METER_10_C1_5),
            }),
            fir: Some(Fir {
                index: 5,
                bypass: FIR_10_0_STATUS,
                num_coefficients: FIR_10_0_TAPS,
                max_coefficients: 2048,
            }),
        },
        Output {
            gate: Gate {
                enable: D_GAIN_11_0_STATUS,
                gain: D_GAIN_11_0,
            },
            meter: METER_10_C2_6,
            delay_addr: DELAY_11_0,
            invert_addr: POLARITY_OUT_1_10,
            peq: &[
                PEQ_11_10, PEQ_11_9, PEQ_11_8, PEQ_11_7, PEQ_11_6, PEQ_11_5, PEQ_11_4, PEQ_11_3,
                PEQ_11_2, PEQ_11_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_11_1, BPF_11_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_11_0_STATUS,
                threshold: COMP_11_0_THRESHOLD,
                ratio: COMP_11_0_RATIO,
                attack: COMP_11_0_ATIME,
                release: COMP_11_0_RTIME,
                meter: Some(METER_10_C1_6),
            }),
            fir: Some(Fir {
                index: 6,
                bypass: FIR_11_0_STATUS,
                num_coefficients: FIR_11_0_TAPS,
                max_coefficients: 2048,
            }),
        },
        Output {
            gate: Gate {
                enable: D_GAIN_12_0_STATUS,
                gain: D_GAIN_12_0,
            },
            meter: METER_10_C2_7,
            delay_addr: DELAY_12_0,
            invert_addr: POLARITY_OUT_1_11,
            peq: &[
                PEQ_12_10, PEQ_12_9, PEQ_12_8, PEQ_12_7, PEQ_12_6, PEQ_12_5, PEQ_12_4, PEQ_12_3,
                PEQ_12_2, PEQ_12_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_12_1, BPF_12_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_12_0_STATUS,
                threshold: COMP_12_0_THRESHOLD,
                ratio: COMP_12_0_RATIO,
                attack: COMP_12_0_ATIME,
                release: COMP_12_0_RTIME,
                meter: Some(METER_10_C1_7),
            }),
            fir: Some(Fir {
                index: 7,
                bypass: FIR_12_0_STATUS,
                num_coefficients: FIR_12_0_TAPS,
                max_coefficients: 2048,
            }),
        },
    ],
    fir_max_taps: 9600,
    internal_sampling_rate: 96000,
    delay_mode: DelayMode::TenNanoseconds,
    #[cfg(feature = "symbols")]
    symbols: SYMBOLS,
};
