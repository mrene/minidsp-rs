//
// This file is generated by `minidsp-devtools codegen`. DO NOT EDIT.
//
use super::*;
pub mod sym {
    #[allow(dead_code)]
    pub const BM_D_GAIN_1_STATUS: u16 = 0;
    pub const BM_D_GAIN_2_STATUS: u16 = 1;
    pub const BM_D_GAIN_3_STATUS: u16 = 2;
    pub const BM_D_GAIN_4_STATUS: u16 = 3;
    pub const BM_D_GAIN_5_STATUS: u16 = 4;
    pub const BM_D_GAIN_6_STATUS: u16 = 5;
    pub const BM_D_GAIN_7_STATUS: u16 = 6;
    pub const BM_D_GAIN_8_STATUS: u16 = 7;
    pub const BM_D_GAIN_1: u16 = 8;
    pub const BM_D_GAIN_2: u16 = 9;
    pub const BM_D_GAIN_3: u16 = 10;
    pub const BM_D_GAIN_4: u16 = 11;
    pub const BM_D_GAIN_5: u16 = 12;
    pub const BM_D_GAIN_6: u16 = 13;
    pub const BM_D_GAIN_7: u16 = 14;
    pub const BM_D_GAIN_8: u16 = 15;
    pub const BM_MIXER_1_1_STATUS: u16 = 16;
    pub const BM_MIXER_1_2_STATUS: u16 = 17;
    pub const BM_MIXER_1_3_STATUS: u16 = 18;
    pub const BM_MIXER_1_4_STATUS: u16 = 19;
    pub const BM_MIXER_1_5_STATUS: u16 = 20;
    pub const BM_MIXER_1_6_STATUS: u16 = 21;
    pub const BM_MIXER_1_7_STATUS: u16 = 22;
    pub const BM_MIXER_1_8_STATUS: u16 = 23;
    pub const BM_MIXER_2_1_STATUS: u16 = 24;
    pub const BM_MIXER_2_2_STATUS: u16 = 25;
    pub const BM_MIXER_2_3_STATUS: u16 = 26;
    pub const BM_MIXER_2_4_STATUS: u16 = 27;
    pub const BM_MIXER_2_5_STATUS: u16 = 28;
    pub const BM_MIXER_2_6_STATUS: u16 = 29;
    pub const BM_MIXER_2_7_STATUS: u16 = 30;
    pub const BM_MIXER_2_8_STATUS: u16 = 31;
    pub const BM_MIXER_3_1_STATUS: u16 = 32;
    pub const BM_MIXER_3_2_STATUS: u16 = 33;
    pub const BM_MIXER_3_3_STATUS: u16 = 34;
    pub const BM_MIXER_3_4_STATUS: u16 = 35;
    pub const BM_MIXER_3_5_STATUS: u16 = 36;
    pub const BM_MIXER_3_6_STATUS: u16 = 37;
    pub const BM_MIXER_3_7_STATUS: u16 = 38;
    pub const BM_MIXER_3_8_STATUS: u16 = 39;
    pub const BM_MIXER_4_1_STATUS: u16 = 40;
    pub const BM_MIXER_4_2_STATUS: u16 = 41;
    pub const BM_MIXER_4_3_STATUS: u16 = 42;
    pub const BM_MIXER_4_4_STATUS: u16 = 43;
    pub const BM_MIXER_4_5_STATUS: u16 = 44;
    pub const BM_MIXER_4_6_STATUS: u16 = 45;
    pub const BM_MIXER_4_7_STATUS: u16 = 46;
    pub const BM_MIXER_4_8_STATUS: u16 = 47;
    pub const BM_MIXER_5_1_STATUS: u16 = 48;
    pub const BM_MIXER_5_2_STATUS: u16 = 49;
    pub const BM_MIXER_5_3_STATUS: u16 = 50;
    pub const BM_MIXER_5_4_STATUS: u16 = 51;
    pub const BM_MIXER_5_5_STATUS: u16 = 52;
    pub const BM_MIXER_5_6_STATUS: u16 = 53;
    pub const BM_MIXER_5_7_STATUS: u16 = 54;
    pub const BM_MIXER_5_8_STATUS: u16 = 55;
    pub const BM_MIXER_6_1_STATUS: u16 = 56;
    pub const BM_MIXER_6_2_STATUS: u16 = 57;
    pub const BM_MIXER_6_3_STATUS: u16 = 58;
    pub const BM_MIXER_6_4_STATUS: u16 = 59;
    pub const BM_MIXER_6_5_STATUS: u16 = 60;
    pub const BM_MIXER_6_6_STATUS: u16 = 61;
    pub const BM_MIXER_6_7_STATUS: u16 = 62;
    pub const BM_MIXER_6_8_STATUS: u16 = 63;
    pub const BM_MIXER_7_1_STATUS: u16 = 64;
    pub const BM_MIXER_7_2_STATUS: u16 = 65;
    pub const BM_MIXER_7_3_STATUS: u16 = 66;
    pub const BM_MIXER_7_4_STATUS: u16 = 67;
    pub const BM_MIXER_7_5_STATUS: u16 = 68;
    pub const BM_MIXER_7_6_STATUS: u16 = 69;
    pub const BM_MIXER_7_7_STATUS: u16 = 70;
    pub const BM_MIXER_7_8_STATUS: u16 = 71;
    pub const BM_MIXER_8_1_STATUS: u16 = 72;
    pub const BM_MIXER_8_2_STATUS: u16 = 73;
    pub const BM_MIXER_8_3_STATUS: u16 = 74;
    pub const BM_MIXER_8_4_STATUS: u16 = 75;
    pub const BM_MIXER_8_5_STATUS: u16 = 76;
    pub const BM_MIXER_8_6_STATUS: u16 = 77;
    pub const BM_MIXER_8_7_STATUS: u16 = 78;
    pub const BM_MIXER_8_8_STATUS: u16 = 79;
    pub const BM_MIXER_9_1_STATUS: u16 = 80;
    pub const BM_MIXER_9_2_STATUS: u16 = 81;
    pub const BM_MIXER_9_3_STATUS: u16 = 82;
    pub const BM_MIXER_9_4_STATUS: u16 = 83;
    pub const BM_MIXER_9_5_STATUS: u16 = 84;
    pub const BM_MIXER_9_6_STATUS: u16 = 85;
    pub const BM_MIXER_9_7_STATUS: u16 = 86;
    pub const BM_MIXER_9_8_STATUS: u16 = 87;
    pub const BM_MIXER_1_1: u16 = 88;
    pub const BM_MIXER_1_2: u16 = 89;
    pub const BM_MIXER_1_3: u16 = 90;
    pub const BM_MIXER_1_4: u16 = 91;
    pub const BM_MIXER_1_5: u16 = 92;
    pub const BM_MIXER_1_6: u16 = 93;
    pub const BM_MIXER_1_7: u16 = 94;
    pub const BM_MIXER_1_8: u16 = 95;
    pub const BM_MIXER_2_1: u16 = 96;
    pub const BM_MIXER_2_2: u16 = 97;
    pub const BM_MIXER_2_3: u16 = 98;
    pub const BM_MIXER_2_4: u16 = 99;
    pub const BM_MIXER_2_5: u16 = 100;
    pub const BM_MIXER_2_6: u16 = 101;
    pub const BM_MIXER_2_7: u16 = 102;
    pub const BM_MIXER_2_8: u16 = 103;
    pub const BM_MIXER_3_1: u16 = 104;
    pub const BM_MIXER_3_2: u16 = 105;
    pub const BM_MIXER_3_3: u16 = 106;
    pub const BM_MIXER_3_4: u16 = 107;
    pub const BM_MIXER_3_5: u16 = 108;
    pub const BM_MIXER_3_6: u16 = 109;
    pub const BM_MIXER_3_7: u16 = 110;
    pub const BM_MIXER_3_8: u16 = 111;
    pub const BM_MIXER_4_1: u16 = 112;
    pub const BM_MIXER_4_2: u16 = 113;
    pub const BM_MIXER_4_3: u16 = 114;
    pub const BM_MIXER_4_4: u16 = 115;
    pub const BM_MIXER_4_5: u16 = 116;
    pub const BM_MIXER_4_6: u16 = 117;
    pub const BM_MIXER_4_7: u16 = 118;
    pub const BM_MIXER_4_8: u16 = 119;
    pub const BM_MIXER_5_1: u16 = 120;
    pub const BM_MIXER_5_2: u16 = 121;
    pub const BM_MIXER_5_3: u16 = 122;
    pub const BM_MIXER_5_4: u16 = 123;
    pub const BM_MIXER_5_5: u16 = 124;
    pub const BM_MIXER_5_6: u16 = 125;
    pub const BM_MIXER_5_7: u16 = 126;
    pub const BM_MIXER_5_8: u16 = 127;
    pub const BM_MIXER_6_1: u16 = 128;
    pub const BM_MIXER_6_2: u16 = 129;
    pub const BM_MIXER_6_3: u16 = 130;
    pub const BM_MIXER_6_4: u16 = 131;
    pub const BM_MIXER_6_5: u16 = 132;
    pub const BM_MIXER_6_6: u16 = 133;
    pub const BM_MIXER_6_7: u16 = 134;
    pub const BM_MIXER_6_8: u16 = 135;
    pub const BM_MIXER_7_1: u16 = 136;
    pub const BM_MIXER_7_2: u16 = 137;
    pub const BM_MIXER_7_3: u16 = 138;
    pub const BM_MIXER_7_4: u16 = 139;
    pub const BM_MIXER_7_5: u16 = 140;
    pub const BM_MIXER_7_6: u16 = 141;
    pub const BM_MIXER_7_7: u16 = 142;
    pub const BM_MIXER_7_8: u16 = 143;
    pub const BM_MIXER_8_1: u16 = 144;
    pub const BM_MIXER_8_2: u16 = 145;
    pub const BM_MIXER_8_3: u16 = 146;
    pub const BM_MIXER_8_4: u16 = 147;
    pub const BM_MIXER_8_5: u16 = 148;
    pub const BM_MIXER_8_6: u16 = 149;
    pub const BM_MIXER_8_7: u16 = 150;
    pub const BM_MIXER_8_8: u16 = 151;
    pub const BM_MIXER_9_1: u16 = 152;
    pub const BM_MIXER_9_2: u16 = 153;
    pub const BM_MIXER_9_3: u16 = 154;
    pub const BM_MIXER_9_4: u16 = 155;
    pub const BM_MIXER_9_5: u16 = 156;
    pub const BM_MIXER_9_6: u16 = 157;
    pub const BM_MIXER_9_7: u16 = 158;
    pub const BM_MIXER_9_8: u16 = 159;
    pub const BPF_9_1: u16 = 160;
    pub const BPF_17_5: u16 = 170;
    pub const BPF_10_1: u16 = 180;
    pub const BPF_18_5: u16 = 190;
    pub const BPF_11_1: u16 = 200;
    pub const BPF_19_5: u16 = 210;
    pub const BPF_12_1: u16 = 220;
    pub const BPF_20_5: u16 = 230;
    pub const BPF_13_1: u16 = 240;
    pub const BPF_21_5: u16 = 250;
    pub const BPF_14_1: u16 = 260;
    pub const BPF_22_5: u16 = 270;
    pub const BPF_15_1: u16 = 280;
    pub const BPF_23_5: u16 = 290;
    pub const BPF_16_1: u16 = 300;
    pub const BPF_24_5: u16 = 310;
    pub const OUT_MIXER_0_0_STATUS: u16 = 320;
    pub const OUT_MIXER_0_1_STATUS: u16 = 321;
    pub const OUT_MIXER_0_2_STATUS: u16 = 322;
    pub const OUT_MIXER_0_3_STATUS: u16 = 323;
    pub const OUT_MIXER_0_4_STATUS: u16 = 324;
    pub const OUT_MIXER_0_5_STATUS: u16 = 325;
    pub const OUT_MIXER_0_6_STATUS: u16 = 326;
    pub const OUT_MIXER_0_7_STATUS: u16 = 327;
    pub const OUT_MIXER_1_0_STATUS: u16 = 328;
    pub const OUT_MIXER_1_1_STATUS: u16 = 329;
    pub const OUT_MIXER_1_2_STATUS: u16 = 330;
    pub const OUT_MIXER_1_3_STATUS: u16 = 331;
    pub const OUT_MIXER_1_4_STATUS: u16 = 332;
    pub const OUT_MIXER_1_5_STATUS: u16 = 333;
    pub const OUT_MIXER_1_6_STATUS: u16 = 334;
    pub const OUT_MIXER_1_7_STATUS: u16 = 335;
    pub const OUT_MIXER_2_0_STATUS: u16 = 336;
    pub const OUT_MIXER_2_1_STATUS: u16 = 337;
    pub const OUT_MIXER_2_2_STATUS: u16 = 338;
    pub const OUT_MIXER_2_3_STATUS: u16 = 339;
    pub const OUT_MIXER_2_4_STATUS: u16 = 340;
    pub const OUT_MIXER_2_5_STATUS: u16 = 341;
    pub const OUT_MIXER_2_6_STATUS: u16 = 342;
    pub const OUT_MIXER_2_7_STATUS: u16 = 343;
    pub const OUT_MIXER_3_0_STATUS: u16 = 344;
    pub const OUT_MIXER_3_1_STATUS: u16 = 345;
    pub const OUT_MIXER_3_2_STATUS: u16 = 346;
    pub const OUT_MIXER_3_3_STATUS: u16 = 347;
    pub const OUT_MIXER_3_4_STATUS: u16 = 348;
    pub const OUT_MIXER_3_5_STATUS: u16 = 349;
    pub const OUT_MIXER_3_6_STATUS: u16 = 350;
    pub const OUT_MIXER_3_7_STATUS: u16 = 351;
    pub const OUT_MIXER_4_0_STATUS: u16 = 352;
    pub const OUT_MIXER_4_1_STATUS: u16 = 353;
    pub const OUT_MIXER_4_2_STATUS: u16 = 354;
    pub const OUT_MIXER_4_3_STATUS: u16 = 355;
    pub const OUT_MIXER_4_4_STATUS: u16 = 356;
    pub const OUT_MIXER_4_5_STATUS: u16 = 357;
    pub const OUT_MIXER_4_6_STATUS: u16 = 358;
    pub const OUT_MIXER_4_7_STATUS: u16 = 359;
    pub const OUT_MIXER_5_0_STATUS: u16 = 360;
    pub const OUT_MIXER_5_1_STATUS: u16 = 361;
    pub const OUT_MIXER_5_2_STATUS: u16 = 362;
    pub const OUT_MIXER_5_3_STATUS: u16 = 363;
    pub const OUT_MIXER_5_4_STATUS: u16 = 364;
    pub const OUT_MIXER_5_5_STATUS: u16 = 365;
    pub const OUT_MIXER_5_6_STATUS: u16 = 366;
    pub const OUT_MIXER_5_7_STATUS: u16 = 367;
    pub const OUT_MIXER_6_0_STATUS: u16 = 368;
    pub const OUT_MIXER_6_1_STATUS: u16 = 369;
    pub const OUT_MIXER_6_2_STATUS: u16 = 370;
    pub const OUT_MIXER_6_3_STATUS: u16 = 371;
    pub const OUT_MIXER_6_4_STATUS: u16 = 372;
    pub const OUT_MIXER_6_5_STATUS: u16 = 373;
    pub const OUT_MIXER_6_6_STATUS: u16 = 374;
    pub const OUT_MIXER_6_7_STATUS: u16 = 375;
    pub const OUT_MIXER_7_0_STATUS: u16 = 376;
    pub const OUT_MIXER_7_1_STATUS: u16 = 377;
    pub const OUT_MIXER_7_2_STATUS: u16 = 378;
    pub const OUT_MIXER_7_3_STATUS: u16 = 379;
    pub const OUT_MIXER_7_4_STATUS: u16 = 380;
    pub const OUT_MIXER_7_5_STATUS: u16 = 381;
    pub const OUT_MIXER_7_6_STATUS: u16 = 382;
    pub const OUT_MIXER_7_7_STATUS: u16 = 383;
    pub const OUT_MIXER_0_0: u16 = 384;
    pub const OUT_MIXER_0_1: u16 = 385;
    pub const OUT_MIXER_0_2: u16 = 386;
    pub const OUT_MIXER_0_3: u16 = 387;
    pub const OUT_MIXER_0_4: u16 = 388;
    pub const OUT_MIXER_0_5: u16 = 389;
    pub const OUT_MIXER_0_6: u16 = 390;
    pub const OUT_MIXER_0_7: u16 = 391;
    pub const OUT_MIXER_1_0: u16 = 392;
    pub const OUT_MIXER_1_1: u16 = 393;
    pub const OUT_MIXER_1_2: u16 = 394;
    pub const OUT_MIXER_1_3: u16 = 395;
    pub const OUT_MIXER_1_4: u16 = 396;
    pub const OUT_MIXER_1_5: u16 = 397;
    pub const OUT_MIXER_1_6: u16 = 398;
    pub const OUT_MIXER_1_7: u16 = 399;
    pub const OUT_MIXER_2_0: u16 = 400;
    pub const OUT_MIXER_2_1: u16 = 401;
    pub const OUT_MIXER_2_2: u16 = 402;
    pub const OUT_MIXER_2_3: u16 = 403;
    pub const OUT_MIXER_2_4: u16 = 404;
    pub const OUT_MIXER_2_5: u16 = 405;
    pub const OUT_MIXER_2_6: u16 = 406;
    pub const OUT_MIXER_2_7: u16 = 407;
    pub const OUT_MIXER_3_0: u16 = 408;
    pub const OUT_MIXER_3_1: u16 = 409;
    pub const OUT_MIXER_3_2: u16 = 410;
    pub const OUT_MIXER_3_3: u16 = 411;
    pub const OUT_MIXER_3_4: u16 = 412;
    pub const OUT_MIXER_3_5: u16 = 413;
    pub const OUT_MIXER_3_6: u16 = 414;
    pub const OUT_MIXER_3_7: u16 = 415;
    pub const OUT_MIXER_4_0: u16 = 416;
    pub const OUT_MIXER_4_1: u16 = 417;
    pub const OUT_MIXER_4_2: u16 = 418;
    pub const OUT_MIXER_4_3: u16 = 419;
    pub const OUT_MIXER_4_4: u16 = 420;
    pub const OUT_MIXER_4_5: u16 = 421;
    pub const OUT_MIXER_4_6: u16 = 422;
    pub const OUT_MIXER_4_7: u16 = 423;
    pub const OUT_MIXER_5_0: u16 = 424;
    pub const OUT_MIXER_5_1: u16 = 425;
    pub const OUT_MIXER_5_2: u16 = 426;
    pub const OUT_MIXER_5_3: u16 = 427;
    pub const OUT_MIXER_5_4: u16 = 428;
    pub const OUT_MIXER_5_5: u16 = 429;
    pub const OUT_MIXER_5_6: u16 = 430;
    pub const OUT_MIXER_5_7: u16 = 431;
    pub const OUT_MIXER_6_0: u16 = 432;
    pub const OUT_MIXER_6_1: u16 = 433;
    pub const OUT_MIXER_6_2: u16 = 434;
    pub const OUT_MIXER_6_3: u16 = 435;
    pub const OUT_MIXER_6_4: u16 = 436;
    pub const OUT_MIXER_6_5: u16 = 437;
    pub const OUT_MIXER_6_6: u16 = 438;
    pub const OUT_MIXER_6_7: u16 = 439;
    pub const OUT_MIXER_7_0: u16 = 440;
    pub const OUT_MIXER_7_1: u16 = 441;
    pub const OUT_MIXER_7_2: u16 = 442;
    pub const OUT_MIXER_7_3: u16 = 443;
    pub const OUT_MIXER_7_4: u16 = 444;
    pub const OUT_MIXER_7_5: u16 = 445;
    pub const OUT_MIXER_7_6: u16 = 446;
    pub const OUT_MIXER_7_7: u16 = 447;
    pub const METER_IN_1: u16 = 448;
    pub const METER_IN_2: u16 = 449;
    pub const METER_IN_3: u16 = 450;
    pub const METER_IN_4: u16 = 451;
    pub const METER_IN_5: u16 = 452;
    pub const METER_IN_6: u16 = 453;
    pub const METER_IN_7: u16 = 454;
    pub const METER_IN_8: u16 = 455;
    pub const METER_COMP_1: u16 = 456;
    pub const METER_COMP_2: u16 = 457;
    pub const METER_COMP_3: u16 = 458;
    pub const METER_COMP_4: u16 = 459;
    pub const METER_COMP_5: u16 = 460;
    pub const METER_COMP_6: u16 = 461;
    pub const METER_COMP_7: u16 = 462;
    pub const METER_COMP_8: u16 = 463;
    pub const METER_OUT_1: u16 = 464;
    pub const METER_OUT_2: u16 = 465;
    pub const METER_OUT_3: u16 = 466;
    pub const METER_OUT_4: u16 = 467;
    pub const METER_OUT_5: u16 = 468;
    pub const METER_OUT_6: u16 = 469;
    pub const METER_OUT_7: u16 = 470;
    pub const METER_OUT_8: u16 = 471;
    pub const D_GAIN_1_0_STATUS: u16 = 472;
    pub const COMP_1_0_STATUS: u16 = 473;
    pub const D_GAIN_1_0: u16 = 474;
    pub const COMP_1_0_THRESHOLD: u16 = 475;
    pub const COMP_1_0_GAIN: u16 = 476;
    pub const COMP_1_0_RATIO: u16 = 477;
    pub const COMP_1_0_KNEE: u16 = 478;
    pub const COMP_1_0_ATIME: u16 = 479;
    pub const COMP_1_0_RTIME: u16 = 480;
    pub const DELAY_1_0: u16 = 481;
    pub const METER_1_0: u16 = 482;
    pub const METER_1_1: u16 = 483;
    pub const METER_1_2: u16 = 484;
    pub const POLARITY_OUT_1_0: u16 = 485;
    pub const PEQ_1_1: u16 = 486;
    pub const PEQ_1_2: u16 = 491;
    pub const PEQ_1_3: u16 = 496;
    pub const PEQ_1_4: u16 = 501;
    pub const PEQ_1_5: u16 = 506;
    pub const PEQ_1_6: u16 = 511;
    pub const PEQ_1_7: u16 = 516;
    pub const PEQ_1_8: u16 = 521;
    pub const PEQ_1_9: u16 = 526;
    pub const PEQ_1_10: u16 = 531;
    pub const BPF_1_1: u16 = 536;
    pub const BPF_1_5: u16 = 556;
    pub const D_GAIN_2_0_STATUS: u16 = 576;
    pub const COMP_2_0_STATUS: u16 = 577;
    pub const D_GAIN_2_0: u16 = 578;
    pub const COMP_2_0_THRESHOLD: u16 = 579;
    pub const COMP_2_0_GAIN: u16 = 580;
    pub const COMP_2_0_RATIO: u16 = 581;
    pub const COMP_2_0_KNEE: u16 = 582;
    pub const COMP_2_0_ATIME: u16 = 583;
    pub const COMP_2_0_RTIME: u16 = 584;
    pub const DELAY_2_0: u16 = 585;
    pub const METER_2_0: u16 = 586;
    pub const METER_2_1: u16 = 587;
    pub const METER_2_2: u16 = 588;
    pub const POLARITY_OUT_2_0: u16 = 589;
    pub const PEQ_2_1: u16 = 590;
    pub const PEQ_2_2: u16 = 595;
    pub const PEQ_2_3: u16 = 600;
    pub const PEQ_2_4: u16 = 605;
    pub const PEQ_2_5: u16 = 610;
    pub const PEQ_2_6: u16 = 615;
    pub const PEQ_2_7: u16 = 620;
    pub const PEQ_2_8: u16 = 625;
    pub const PEQ_2_9: u16 = 630;
    pub const PEQ_2_10: u16 = 635;
    pub const BPF_2_1: u16 = 640;
    pub const BPF_2_5: u16 = 660;
    pub const D_GAIN_3_0_STATUS: u16 = 680;
    pub const COMP_3_0_STATUS: u16 = 681;
    pub const D_GAIN_3_0: u16 = 682;
    pub const COMP_3_0_THRESHOLD: u16 = 683;
    pub const COMP_3_0_GAIN: u16 = 684;
    pub const COMP_3_0_RATIO: u16 = 685;
    pub const COMP_3_0_KNEE: u16 = 686;
    pub const COMP_3_0_ATIME: u16 = 687;
    pub const COMP_3_0_RTIME: u16 = 688;
    pub const DELAY_3_0: u16 = 689;
    pub const METER_3_0: u16 = 690;
    pub const METER_3_1: u16 = 691;
    pub const METER_3_2: u16 = 692;
    pub const POLARITY_OUT_3_0: u16 = 693;
    pub const PEQ_3_1: u16 = 694;
    pub const PEQ_3_2: u16 = 699;
    pub const PEQ_3_3: u16 = 704;
    pub const PEQ_3_4: u16 = 709;
    pub const PEQ_3_5: u16 = 714;
    pub const PEQ_3_6: u16 = 719;
    pub const PEQ_3_7: u16 = 724;
    pub const PEQ_3_8: u16 = 729;
    pub const PEQ_3_9: u16 = 734;
    pub const PEQ_3_10: u16 = 739;
    pub const BPF_3_1: u16 = 744;
    pub const BPF_3_5: u16 = 764;
    pub const D_GAIN_4_0_STATUS: u16 = 784;
    pub const COMP_4_0_STATUS: u16 = 785;
    pub const D_GAIN_4_0: u16 = 786;
    pub const COMP_4_0_THRESHOLD: u16 = 787;
    pub const COMP_4_0_GAIN: u16 = 788;
    pub const COMP_4_0_RATIO: u16 = 789;
    pub const COMP_4_0_KNEE: u16 = 790;
    pub const COMP_4_0_ATIME: u16 = 791;
    pub const COMP_4_0_RTIME: u16 = 792;
    pub const DELAY_4_0: u16 = 793;
    pub const METER_4_0: u16 = 794;
    pub const METER_4_1: u16 = 795;
    pub const METER_4_2: u16 = 796;
    pub const POLARITY_OUT_4_0: u16 = 797;
    pub const PEQ_4_1: u16 = 798;
    pub const PEQ_4_2: u16 = 803;
    pub const PEQ_4_3: u16 = 808;
    pub const PEQ_4_4: u16 = 813;
    pub const PEQ_4_5: u16 = 818;
    pub const PEQ_4_6: u16 = 823;
    pub const PEQ_4_7: u16 = 828;
    pub const PEQ_4_8: u16 = 833;
    pub const PEQ_4_9: u16 = 838;
    pub const PEQ_4_10: u16 = 843;
    pub const BPF_4_1: u16 = 848;
    pub const BPF_4_5: u16 = 868;
    pub const D_GAIN_5_0_STATUS: u16 = 888;
    pub const COMP_5_0_STATUS: u16 = 889;
    pub const D_GAIN_5_0: u16 = 890;
    pub const COMP_5_0_THRESHOLD: u16 = 891;
    pub const COMP_5_0_GAIN: u16 = 892;
    pub const COMP_5_0_RATIO: u16 = 893;
    pub const COMP_5_0_KNEE: u16 = 894;
    pub const COMP_5_0_ATIME: u16 = 895;
    pub const COMP_5_0_RTIME: u16 = 896;
    pub const DELAY_5_0: u16 = 897;
    pub const METER_5_0: u16 = 898;
    pub const METER_5_1: u16 = 899;
    pub const METER_5_2: u16 = 900;
    pub const POLARITY_OUT_5_0: u16 = 901;
    pub const PEQ_5_1: u16 = 902;
    pub const PEQ_5_2: u16 = 907;
    pub const PEQ_5_3: u16 = 912;
    pub const PEQ_5_4: u16 = 917;
    pub const PEQ_5_5: u16 = 922;
    pub const PEQ_5_6: u16 = 927;
    pub const PEQ_5_7: u16 = 932;
    pub const PEQ_5_8: u16 = 937;
    pub const PEQ_5_9: u16 = 942;
    pub const PEQ_5_10: u16 = 947;
    pub const BPF_5_1: u16 = 952;
    pub const BPF_5_5: u16 = 972;
    pub const D_GAIN_6_0_STATUS: u16 = 992;
    pub const COMP_6_0_STATUS: u16 = 993;
    pub const D_GAIN_6_0: u16 = 994;
    pub const COMP_6_0_THRESHOLD: u16 = 995;
    pub const COMP_6_0_GAIN: u16 = 996;
    pub const COMP_6_0_RATIO: u16 = 997;
    pub const COMP_6_0_KNEE: u16 = 998;
    pub const COMP_6_0_ATIME: u16 = 999;
    pub const COMP_6_0_RTIME: u16 = 1000;
    pub const DELAY_6_0: u16 = 1001;
    pub const METER_6_0: u16 = 1002;
    pub const METER_6_1: u16 = 1003;
    pub const METER_6_2: u16 = 1004;
    pub const POLARITY_OUT_6_0: u16 = 1005;
    pub const PEQ_6_1: u16 = 1006;
    pub const PEQ_6_2: u16 = 1011;
    pub const PEQ_6_3: u16 = 1016;
    pub const PEQ_6_4: u16 = 1021;
    pub const PEQ_6_5: u16 = 1026;
    pub const PEQ_6_6: u16 = 1031;
    pub const PEQ_6_7: u16 = 1036;
    pub const PEQ_6_8: u16 = 1041;
    pub const PEQ_6_9: u16 = 1046;
    pub const PEQ_6_10: u16 = 1051;
    pub const BPF_6_1: u16 = 1056;
    pub const BPF_6_5: u16 = 1076;
    pub const D_GAIN_7_0_STATUS: u16 = 1096;
    pub const COMP_7_0_STATUS: u16 = 1097;
    pub const D_GAIN_7_0: u16 = 1098;
    pub const COMP_7_0_THRESHOLD: u16 = 1099;
    pub const COMP_7_0_GAIN: u16 = 1100;
    pub const COMP_7_0_RATIO: u16 = 1101;
    pub const COMP_7_0_KNEE: u16 = 1102;
    pub const COMP_7_0_ATIME: u16 = 1103;
    pub const COMP_7_0_RTIME: u16 = 1104;
    pub const DELAY_7_0: u16 = 1105;
    pub const METER_7_0: u16 = 1106;
    pub const METER_7_1: u16 = 1107;
    pub const METER_7_2: u16 = 1108;
    pub const POLARITY_OUT_7_0: u16 = 1109;
    pub const PEQ_7_1: u16 = 1110;
    pub const PEQ_7_2: u16 = 1115;
    pub const PEQ_7_3: u16 = 1120;
    pub const PEQ_7_4: u16 = 1125;
    pub const PEQ_7_5: u16 = 1130;
    pub const PEQ_7_6: u16 = 1135;
    pub const PEQ_7_7: u16 = 1140;
    pub const PEQ_7_8: u16 = 1145;
    pub const PEQ_7_9: u16 = 1150;
    pub const PEQ_7_10: u16 = 1155;
    pub const BPF_7_1: u16 = 1160;
    pub const BPF_7_5: u16 = 1180;
    pub const D_GAIN_8_0_STATUS: u16 = 1200;
    pub const COMP_8_0_STATUS: u16 = 1201;
    pub const D_GAIN_8_0: u16 = 1202;
    pub const COMP_8_0_THRESHOLD: u16 = 1203;
    pub const COMP_8_0_GAIN: u16 = 1204;
    pub const COMP_8_0_RATIO: u16 = 1205;
    pub const COMP_8_0_KNEE: u16 = 1206;
    pub const COMP_8_0_ATIME: u16 = 1207;
    pub const COMP_8_0_RTIME: u16 = 1208;
    pub const DELAY_8_0: u16 = 1209;
    pub const METER_8_0: u16 = 1210;
    pub const METER_8_1: u16 = 1211;
    pub const METER_8_2: u16 = 1212;
    pub const POLARITY_OUT_8_0: u16 = 1213;
    pub const PEQ_8_1: u16 = 1214;
    pub const PEQ_8_2: u16 = 1219;
    pub const PEQ_8_3: u16 = 1224;
    pub const PEQ_8_4: u16 = 1229;
    pub const PEQ_8_5: u16 = 1234;
    pub const PEQ_8_6: u16 = 1239;
    pub const PEQ_8_7: u16 = 1244;
    pub const PEQ_8_8: u16 = 1249;
    pub const PEQ_8_9: u16 = 1254;
    pub const PEQ_8_10: u16 = 1259;
    pub const BPF_8_1: u16 = 1264;
    pub const BPF_8_5: u16 = 1284;
    #[cfg(feature = "symbols")]
    pub const SYMBOLS: &[(&str, u16)] = &[
        ("BM_D_GAIN_1_STATUS", BM_D_GAIN_1_STATUS),
        ("BM_D_GAIN_2_STATUS", BM_D_GAIN_2_STATUS),
        ("BM_D_GAIN_3_STATUS", BM_D_GAIN_3_STATUS),
        ("BM_D_GAIN_4_STATUS", BM_D_GAIN_4_STATUS),
        ("BM_D_GAIN_5_STATUS", BM_D_GAIN_5_STATUS),
        ("BM_D_GAIN_6_STATUS", BM_D_GAIN_6_STATUS),
        ("BM_D_GAIN_7_STATUS", BM_D_GAIN_7_STATUS),
        ("BM_D_GAIN_8_STATUS", BM_D_GAIN_8_STATUS),
        ("BM_D_GAIN_1", BM_D_GAIN_1),
        ("BM_D_GAIN_2", BM_D_GAIN_2),
        ("BM_D_GAIN_3", BM_D_GAIN_3),
        ("BM_D_GAIN_4", BM_D_GAIN_4),
        ("BM_D_GAIN_5", BM_D_GAIN_5),
        ("BM_D_GAIN_6", BM_D_GAIN_6),
        ("BM_D_GAIN_7", BM_D_GAIN_7),
        ("BM_D_GAIN_8", BM_D_GAIN_8),
        ("BM_MIXER_1_1_STATUS", BM_MIXER_1_1_STATUS),
        ("BM_MIXER_1_2_STATUS", BM_MIXER_1_2_STATUS),
        ("BM_MIXER_1_3_STATUS", BM_MIXER_1_3_STATUS),
        ("BM_MIXER_1_4_STATUS", BM_MIXER_1_4_STATUS),
        ("BM_MIXER_1_5_STATUS", BM_MIXER_1_5_STATUS),
        ("BM_MIXER_1_6_STATUS", BM_MIXER_1_6_STATUS),
        ("BM_MIXER_1_7_STATUS", BM_MIXER_1_7_STATUS),
        ("BM_MIXER_1_8_STATUS", BM_MIXER_1_8_STATUS),
        ("BM_MIXER_2_1_STATUS", BM_MIXER_2_1_STATUS),
        ("BM_MIXER_2_2_STATUS", BM_MIXER_2_2_STATUS),
        ("BM_MIXER_2_3_STATUS", BM_MIXER_2_3_STATUS),
        ("BM_MIXER_2_4_STATUS", BM_MIXER_2_4_STATUS),
        ("BM_MIXER_2_5_STATUS", BM_MIXER_2_5_STATUS),
        ("BM_MIXER_2_6_STATUS", BM_MIXER_2_6_STATUS),
        ("BM_MIXER_2_7_STATUS", BM_MIXER_2_7_STATUS),
        ("BM_MIXER_2_8_STATUS", BM_MIXER_2_8_STATUS),
        ("BM_MIXER_3_1_STATUS", BM_MIXER_3_1_STATUS),
        ("BM_MIXER_3_2_STATUS", BM_MIXER_3_2_STATUS),
        ("BM_MIXER_3_3_STATUS", BM_MIXER_3_3_STATUS),
        ("BM_MIXER_3_4_STATUS", BM_MIXER_3_4_STATUS),
        ("BM_MIXER_3_5_STATUS", BM_MIXER_3_5_STATUS),
        ("BM_MIXER_3_6_STATUS", BM_MIXER_3_6_STATUS),
        ("BM_MIXER_3_7_STATUS", BM_MIXER_3_7_STATUS),
        ("BM_MIXER_3_8_STATUS", BM_MIXER_3_8_STATUS),
        ("BM_MIXER_4_1_STATUS", BM_MIXER_4_1_STATUS),
        ("BM_MIXER_4_2_STATUS", BM_MIXER_4_2_STATUS),
        ("BM_MIXER_4_3_STATUS", BM_MIXER_4_3_STATUS),
        ("BM_MIXER_4_4_STATUS", BM_MIXER_4_4_STATUS),
        ("BM_MIXER_4_5_STATUS", BM_MIXER_4_5_STATUS),
        ("BM_MIXER_4_6_STATUS", BM_MIXER_4_6_STATUS),
        ("BM_MIXER_4_7_STATUS", BM_MIXER_4_7_STATUS),
        ("BM_MIXER_4_8_STATUS", BM_MIXER_4_8_STATUS),
        ("BM_MIXER_5_1_STATUS", BM_MIXER_5_1_STATUS),
        ("BM_MIXER_5_2_STATUS", BM_MIXER_5_2_STATUS),
        ("BM_MIXER_5_3_STATUS", BM_MIXER_5_3_STATUS),
        ("BM_MIXER_5_4_STATUS", BM_MIXER_5_4_STATUS),
        ("BM_MIXER_5_5_STATUS", BM_MIXER_5_5_STATUS),
        ("BM_MIXER_5_6_STATUS", BM_MIXER_5_6_STATUS),
        ("BM_MIXER_5_7_STATUS", BM_MIXER_5_7_STATUS),
        ("BM_MIXER_5_8_STATUS", BM_MIXER_5_8_STATUS),
        ("BM_MIXER_6_1_STATUS", BM_MIXER_6_1_STATUS),
        ("BM_MIXER_6_2_STATUS", BM_MIXER_6_2_STATUS),
        ("BM_MIXER_6_3_STATUS", BM_MIXER_6_3_STATUS),
        ("BM_MIXER_6_4_STATUS", BM_MIXER_6_4_STATUS),
        ("BM_MIXER_6_5_STATUS", BM_MIXER_6_5_STATUS),
        ("BM_MIXER_6_6_STATUS", BM_MIXER_6_6_STATUS),
        ("BM_MIXER_6_7_STATUS", BM_MIXER_6_7_STATUS),
        ("BM_MIXER_6_8_STATUS", BM_MIXER_6_8_STATUS),
        ("BM_MIXER_7_1_STATUS", BM_MIXER_7_1_STATUS),
        ("BM_MIXER_7_2_STATUS", BM_MIXER_7_2_STATUS),
        ("BM_MIXER_7_3_STATUS", BM_MIXER_7_3_STATUS),
        ("BM_MIXER_7_4_STATUS", BM_MIXER_7_4_STATUS),
        ("BM_MIXER_7_5_STATUS", BM_MIXER_7_5_STATUS),
        ("BM_MIXER_7_6_STATUS", BM_MIXER_7_6_STATUS),
        ("BM_MIXER_7_7_STATUS", BM_MIXER_7_7_STATUS),
        ("BM_MIXER_7_8_STATUS", BM_MIXER_7_8_STATUS),
        ("BM_MIXER_8_1_STATUS", BM_MIXER_8_1_STATUS),
        ("BM_MIXER_8_2_STATUS", BM_MIXER_8_2_STATUS),
        ("BM_MIXER_8_3_STATUS", BM_MIXER_8_3_STATUS),
        ("BM_MIXER_8_4_STATUS", BM_MIXER_8_4_STATUS),
        ("BM_MIXER_8_5_STATUS", BM_MIXER_8_5_STATUS),
        ("BM_MIXER_8_6_STATUS", BM_MIXER_8_6_STATUS),
        ("BM_MIXER_8_7_STATUS", BM_MIXER_8_7_STATUS),
        ("BM_MIXER_8_8_STATUS", BM_MIXER_8_8_STATUS),
        ("BM_MIXER_9_1_STATUS", BM_MIXER_9_1_STATUS),
        ("BM_MIXER_9_2_STATUS", BM_MIXER_9_2_STATUS),
        ("BM_MIXER_9_3_STATUS", BM_MIXER_9_3_STATUS),
        ("BM_MIXER_9_4_STATUS", BM_MIXER_9_4_STATUS),
        ("BM_MIXER_9_5_STATUS", BM_MIXER_9_5_STATUS),
        ("BM_MIXER_9_6_STATUS", BM_MIXER_9_6_STATUS),
        ("BM_MIXER_9_7_STATUS", BM_MIXER_9_7_STATUS),
        ("BM_MIXER_9_8_STATUS", BM_MIXER_9_8_STATUS),
        ("BM_MIXER_1_1", BM_MIXER_1_1),
        ("BM_MIXER_1_2", BM_MIXER_1_2),
        ("BM_MIXER_1_3", BM_MIXER_1_3),
        ("BM_MIXER_1_4", BM_MIXER_1_4),
        ("BM_MIXER_1_5", BM_MIXER_1_5),
        ("BM_MIXER_1_6", BM_MIXER_1_6),
        ("BM_MIXER_1_7", BM_MIXER_1_7),
        ("BM_MIXER_1_8", BM_MIXER_1_8),
        ("BM_MIXER_2_1", BM_MIXER_2_1),
        ("BM_MIXER_2_2", BM_MIXER_2_2),
        ("BM_MIXER_2_3", BM_MIXER_2_3),
        ("BM_MIXER_2_4", BM_MIXER_2_4),
        ("BM_MIXER_2_5", BM_MIXER_2_5),
        ("BM_MIXER_2_6", BM_MIXER_2_6),
        ("BM_MIXER_2_7", BM_MIXER_2_7),
        ("BM_MIXER_2_8", BM_MIXER_2_8),
        ("BM_MIXER_3_1", BM_MIXER_3_1),
        ("BM_MIXER_3_2", BM_MIXER_3_2),
        ("BM_MIXER_3_3", BM_MIXER_3_3),
        ("BM_MIXER_3_4", BM_MIXER_3_4),
        ("BM_MIXER_3_5", BM_MIXER_3_5),
        ("BM_MIXER_3_6", BM_MIXER_3_6),
        ("BM_MIXER_3_7", BM_MIXER_3_7),
        ("BM_MIXER_3_8", BM_MIXER_3_8),
        ("BM_MIXER_4_1", BM_MIXER_4_1),
        ("BM_MIXER_4_2", BM_MIXER_4_2),
        ("BM_MIXER_4_3", BM_MIXER_4_3),
        ("BM_MIXER_4_4", BM_MIXER_4_4),
        ("BM_MIXER_4_5", BM_MIXER_4_5),
        ("BM_MIXER_4_6", BM_MIXER_4_6),
        ("BM_MIXER_4_7", BM_MIXER_4_7),
        ("BM_MIXER_4_8", BM_MIXER_4_8),
        ("BM_MIXER_5_1", BM_MIXER_5_1),
        ("BM_MIXER_5_2", BM_MIXER_5_2),
        ("BM_MIXER_5_3", BM_MIXER_5_3),
        ("BM_MIXER_5_4", BM_MIXER_5_4),
        ("BM_MIXER_5_5", BM_MIXER_5_5),
        ("BM_MIXER_5_6", BM_MIXER_5_6),
        ("BM_MIXER_5_7", BM_MIXER_5_7),
        ("BM_MIXER_5_8", BM_MIXER_5_8),
        ("BM_MIXER_6_1", BM_MIXER_6_1),
        ("BM_MIXER_6_2", BM_MIXER_6_2),
        ("BM_MIXER_6_3", BM_MIXER_6_3),
        ("BM_MIXER_6_4", BM_MIXER_6_4),
        ("BM_MIXER_6_5", BM_MIXER_6_5),
        ("BM_MIXER_6_6", BM_MIXER_6_6),
        ("BM_MIXER_6_7", BM_MIXER_6_7),
        ("BM_MIXER_6_8", BM_MIXER_6_8),
        ("BM_MIXER_7_1", BM_MIXER_7_1),
        ("BM_MIXER_7_2", BM_MIXER_7_2),
        ("BM_MIXER_7_3", BM_MIXER_7_3),
        ("BM_MIXER_7_4", BM_MIXER_7_4),
        ("BM_MIXER_7_5", BM_MIXER_7_5),
        ("BM_MIXER_7_6", BM_MIXER_7_6),
        ("BM_MIXER_7_7", BM_MIXER_7_7),
        ("BM_MIXER_7_8", BM_MIXER_7_8),
        ("BM_MIXER_8_1", BM_MIXER_8_1),
        ("BM_MIXER_8_2", BM_MIXER_8_2),
        ("BM_MIXER_8_3", BM_MIXER_8_3),
        ("BM_MIXER_8_4", BM_MIXER_8_4),
        ("BM_MIXER_8_5", BM_MIXER_8_5),
        ("BM_MIXER_8_6", BM_MIXER_8_6),
        ("BM_MIXER_8_7", BM_MIXER_8_7),
        ("BM_MIXER_8_8", BM_MIXER_8_8),
        ("BM_MIXER_9_1", BM_MIXER_9_1),
        ("BM_MIXER_9_2", BM_MIXER_9_2),
        ("BM_MIXER_9_3", BM_MIXER_9_3),
        ("BM_MIXER_9_4", BM_MIXER_9_4),
        ("BM_MIXER_9_5", BM_MIXER_9_5),
        ("BM_MIXER_9_6", BM_MIXER_9_6),
        ("BM_MIXER_9_7", BM_MIXER_9_7),
        ("BM_MIXER_9_8", BM_MIXER_9_8),
        ("BPF_9_1", BPF_9_1),
        ("BPF_17_5", BPF_17_5),
        ("BPF_10_1", BPF_10_1),
        ("BPF_18_5", BPF_18_5),
        ("BPF_11_1", BPF_11_1),
        ("BPF_19_5", BPF_19_5),
        ("BPF_12_1", BPF_12_1),
        ("BPF_20_5", BPF_20_5),
        ("BPF_13_1", BPF_13_1),
        ("BPF_21_5", BPF_21_5),
        ("BPF_14_1", BPF_14_1),
        ("BPF_22_5", BPF_22_5),
        ("BPF_15_1", BPF_15_1),
        ("BPF_23_5", BPF_23_5),
        ("BPF_16_1", BPF_16_1),
        ("BPF_24_5", BPF_24_5),
        ("OUT_MIXER_0_0_STATUS", OUT_MIXER_0_0_STATUS),
        ("OUT_MIXER_0_1_STATUS", OUT_MIXER_0_1_STATUS),
        ("OUT_MIXER_0_2_STATUS", OUT_MIXER_0_2_STATUS),
        ("OUT_MIXER_0_3_STATUS", OUT_MIXER_0_3_STATUS),
        ("OUT_MIXER_0_4_STATUS", OUT_MIXER_0_4_STATUS),
        ("OUT_MIXER_0_5_STATUS", OUT_MIXER_0_5_STATUS),
        ("OUT_MIXER_0_6_STATUS", OUT_MIXER_0_6_STATUS),
        ("OUT_MIXER_0_7_STATUS", OUT_MIXER_0_7_STATUS),
        ("OUT_MIXER_1_0_STATUS", OUT_MIXER_1_0_STATUS),
        ("OUT_MIXER_1_1_STATUS", OUT_MIXER_1_1_STATUS),
        ("OUT_MIXER_1_2_STATUS", OUT_MIXER_1_2_STATUS),
        ("OUT_MIXER_1_3_STATUS", OUT_MIXER_1_3_STATUS),
        ("OUT_MIXER_1_4_STATUS", OUT_MIXER_1_4_STATUS),
        ("OUT_MIXER_1_5_STATUS", OUT_MIXER_1_5_STATUS),
        ("OUT_MIXER_1_6_STATUS", OUT_MIXER_1_6_STATUS),
        ("OUT_MIXER_1_7_STATUS", OUT_MIXER_1_7_STATUS),
        ("OUT_MIXER_2_0_STATUS", OUT_MIXER_2_0_STATUS),
        ("OUT_MIXER_2_1_STATUS", OUT_MIXER_2_1_STATUS),
        ("OUT_MIXER_2_2_STATUS", OUT_MIXER_2_2_STATUS),
        ("OUT_MIXER_2_3_STATUS", OUT_MIXER_2_3_STATUS),
        ("OUT_MIXER_2_4_STATUS", OUT_MIXER_2_4_STATUS),
        ("OUT_MIXER_2_5_STATUS", OUT_MIXER_2_5_STATUS),
        ("OUT_MIXER_2_6_STATUS", OUT_MIXER_2_6_STATUS),
        ("OUT_MIXER_2_7_STATUS", OUT_MIXER_2_7_STATUS),
        ("OUT_MIXER_3_0_STATUS", OUT_MIXER_3_0_STATUS),
        ("OUT_MIXER_3_1_STATUS", OUT_MIXER_3_1_STATUS),
        ("OUT_MIXER_3_2_STATUS", OUT_MIXER_3_2_STATUS),
        ("OUT_MIXER_3_3_STATUS", OUT_MIXER_3_3_STATUS),
        ("OUT_MIXER_3_4_STATUS", OUT_MIXER_3_4_STATUS),
        ("OUT_MIXER_3_5_STATUS", OUT_MIXER_3_5_STATUS),
        ("OUT_MIXER_3_6_STATUS", OUT_MIXER_3_6_STATUS),
        ("OUT_MIXER_3_7_STATUS", OUT_MIXER_3_7_STATUS),
        ("OUT_MIXER_4_0_STATUS", OUT_MIXER_4_0_STATUS),
        ("OUT_MIXER_4_1_STATUS", OUT_MIXER_4_1_STATUS),
        ("OUT_MIXER_4_2_STATUS", OUT_MIXER_4_2_STATUS),
        ("OUT_MIXER_4_3_STATUS", OUT_MIXER_4_3_STATUS),
        ("OUT_MIXER_4_4_STATUS", OUT_MIXER_4_4_STATUS),
        ("OUT_MIXER_4_5_STATUS", OUT_MIXER_4_5_STATUS),
        ("OUT_MIXER_4_6_STATUS", OUT_MIXER_4_6_STATUS),
        ("OUT_MIXER_4_7_STATUS", OUT_MIXER_4_7_STATUS),
        ("OUT_MIXER_5_0_STATUS", OUT_MIXER_5_0_STATUS),
        ("OUT_MIXER_5_1_STATUS", OUT_MIXER_5_1_STATUS),
        ("OUT_MIXER_5_2_STATUS", OUT_MIXER_5_2_STATUS),
        ("OUT_MIXER_5_3_STATUS", OUT_MIXER_5_3_STATUS),
        ("OUT_MIXER_5_4_STATUS", OUT_MIXER_5_4_STATUS),
        ("OUT_MIXER_5_5_STATUS", OUT_MIXER_5_5_STATUS),
        ("OUT_MIXER_5_6_STATUS", OUT_MIXER_5_6_STATUS),
        ("OUT_MIXER_5_7_STATUS", OUT_MIXER_5_7_STATUS),
        ("OUT_MIXER_6_0_STATUS", OUT_MIXER_6_0_STATUS),
        ("OUT_MIXER_6_1_STATUS", OUT_MIXER_6_1_STATUS),
        ("OUT_MIXER_6_2_STATUS", OUT_MIXER_6_2_STATUS),
        ("OUT_MIXER_6_3_STATUS", OUT_MIXER_6_3_STATUS),
        ("OUT_MIXER_6_4_STATUS", OUT_MIXER_6_4_STATUS),
        ("OUT_MIXER_6_5_STATUS", OUT_MIXER_6_5_STATUS),
        ("OUT_MIXER_6_6_STATUS", OUT_MIXER_6_6_STATUS),
        ("OUT_MIXER_6_7_STATUS", OUT_MIXER_6_7_STATUS),
        ("OUT_MIXER_7_0_STATUS", OUT_MIXER_7_0_STATUS),
        ("OUT_MIXER_7_1_STATUS", OUT_MIXER_7_1_STATUS),
        ("OUT_MIXER_7_2_STATUS", OUT_MIXER_7_2_STATUS),
        ("OUT_MIXER_7_3_STATUS", OUT_MIXER_7_3_STATUS),
        ("OUT_MIXER_7_4_STATUS", OUT_MIXER_7_4_STATUS),
        ("OUT_MIXER_7_5_STATUS", OUT_MIXER_7_5_STATUS),
        ("OUT_MIXER_7_6_STATUS", OUT_MIXER_7_6_STATUS),
        ("OUT_MIXER_7_7_STATUS", OUT_MIXER_7_7_STATUS),
        ("OUT_MIXER_0_0", OUT_MIXER_0_0),
        ("OUT_MIXER_0_1", OUT_MIXER_0_1),
        ("OUT_MIXER_0_2", OUT_MIXER_0_2),
        ("OUT_MIXER_0_3", OUT_MIXER_0_3),
        ("OUT_MIXER_0_4", OUT_MIXER_0_4),
        ("OUT_MIXER_0_5", OUT_MIXER_0_5),
        ("OUT_MIXER_0_6", OUT_MIXER_0_6),
        ("OUT_MIXER_0_7", OUT_MIXER_0_7),
        ("OUT_MIXER_1_0", OUT_MIXER_1_0),
        ("OUT_MIXER_1_1", OUT_MIXER_1_1),
        ("OUT_MIXER_1_2", OUT_MIXER_1_2),
        ("OUT_MIXER_1_3", OUT_MIXER_1_3),
        ("OUT_MIXER_1_4", OUT_MIXER_1_4),
        ("OUT_MIXER_1_5", OUT_MIXER_1_5),
        ("OUT_MIXER_1_6", OUT_MIXER_1_6),
        ("OUT_MIXER_1_7", OUT_MIXER_1_7),
        ("OUT_MIXER_2_0", OUT_MIXER_2_0),
        ("OUT_MIXER_2_1", OUT_MIXER_2_1),
        ("OUT_MIXER_2_2", OUT_MIXER_2_2),
        ("OUT_MIXER_2_3", OUT_MIXER_2_3),
        ("OUT_MIXER_2_4", OUT_MIXER_2_4),
        ("OUT_MIXER_2_5", OUT_MIXER_2_5),
        ("OUT_MIXER_2_6", OUT_MIXER_2_6),
        ("OUT_MIXER_2_7", OUT_MIXER_2_7),
        ("OUT_MIXER_3_0", OUT_MIXER_3_0),
        ("OUT_MIXER_3_1", OUT_MIXER_3_1),
        ("OUT_MIXER_3_2", OUT_MIXER_3_2),
        ("OUT_MIXER_3_3", OUT_MIXER_3_3),
        ("OUT_MIXER_3_4", OUT_MIXER_3_4),
        ("OUT_MIXER_3_5", OUT_MIXER_3_5),
        ("OUT_MIXER_3_6", OUT_MIXER_3_6),
        ("OUT_MIXER_3_7", OUT_MIXER_3_7),
        ("OUT_MIXER_4_0", OUT_MIXER_4_0),
        ("OUT_MIXER_4_1", OUT_MIXER_4_1),
        ("OUT_MIXER_4_2", OUT_MIXER_4_2),
        ("OUT_MIXER_4_3", OUT_MIXER_4_3),
        ("OUT_MIXER_4_4", OUT_MIXER_4_4),
        ("OUT_MIXER_4_5", OUT_MIXER_4_5),
        ("OUT_MIXER_4_6", OUT_MIXER_4_6),
        ("OUT_MIXER_4_7", OUT_MIXER_4_7),
        ("OUT_MIXER_5_0", OUT_MIXER_5_0),
        ("OUT_MIXER_5_1", OUT_MIXER_5_1),
        ("OUT_MIXER_5_2", OUT_MIXER_5_2),
        ("OUT_MIXER_5_3", OUT_MIXER_5_3),
        ("OUT_MIXER_5_4", OUT_MIXER_5_4),
        ("OUT_MIXER_5_5", OUT_MIXER_5_5),
        ("OUT_MIXER_5_6", OUT_MIXER_5_6),
        ("OUT_MIXER_5_7", OUT_MIXER_5_7),
        ("OUT_MIXER_6_0", OUT_MIXER_6_0),
        ("OUT_MIXER_6_1", OUT_MIXER_6_1),
        ("OUT_MIXER_6_2", OUT_MIXER_6_2),
        ("OUT_MIXER_6_3", OUT_MIXER_6_3),
        ("OUT_MIXER_6_4", OUT_MIXER_6_4),
        ("OUT_MIXER_6_5", OUT_MIXER_6_5),
        ("OUT_MIXER_6_6", OUT_MIXER_6_6),
        ("OUT_MIXER_6_7", OUT_MIXER_6_7),
        ("OUT_MIXER_7_0", OUT_MIXER_7_0),
        ("OUT_MIXER_7_1", OUT_MIXER_7_1),
        ("OUT_MIXER_7_2", OUT_MIXER_7_2),
        ("OUT_MIXER_7_3", OUT_MIXER_7_3),
        ("OUT_MIXER_7_4", OUT_MIXER_7_4),
        ("OUT_MIXER_7_5", OUT_MIXER_7_5),
        ("OUT_MIXER_7_6", OUT_MIXER_7_6),
        ("OUT_MIXER_7_7", OUT_MIXER_7_7),
        ("METER_IN_1", METER_IN_1),
        ("METER_IN_2", METER_IN_2),
        ("METER_IN_3", METER_IN_3),
        ("METER_IN_4", METER_IN_4),
        ("METER_IN_5", METER_IN_5),
        ("METER_IN_6", METER_IN_6),
        ("METER_IN_7", METER_IN_7),
        ("METER_IN_8", METER_IN_8),
        ("METER_COMP_1", METER_COMP_1),
        ("METER_COMP_2", METER_COMP_2),
        ("METER_COMP_3", METER_COMP_3),
        ("METER_COMP_4", METER_COMP_4),
        ("METER_COMP_5", METER_COMP_5),
        ("METER_COMP_6", METER_COMP_6),
        ("METER_COMP_7", METER_COMP_7),
        ("METER_COMP_8", METER_COMP_8),
        ("METER_OUT_1", METER_OUT_1),
        ("METER_OUT_2", METER_OUT_2),
        ("METER_OUT_3", METER_OUT_3),
        ("METER_OUT_4", METER_OUT_4),
        ("METER_OUT_5", METER_OUT_5),
        ("METER_OUT_6", METER_OUT_6),
        ("METER_OUT_7", METER_OUT_7),
        ("METER_OUT_8", METER_OUT_8),
        ("D_GAIN_1_0_STATUS", D_GAIN_1_0_STATUS),
        ("COMP_1_0_STATUS", COMP_1_0_STATUS),
        ("D_GAIN_1_0", D_GAIN_1_0),
        ("COMP_1_0_THRESHOLD", COMP_1_0_THRESHOLD),
        ("COMP_1_0_GAIN", COMP_1_0_GAIN),
        ("COMP_1_0_RATIO", COMP_1_0_RATIO),
        ("COMP_1_0_KNEE", COMP_1_0_KNEE),
        ("COMP_1_0_ATIME", COMP_1_0_ATIME),
        ("COMP_1_0_RTIME", COMP_1_0_RTIME),
        ("DELAY_1_0", DELAY_1_0),
        ("METER_1_0", METER_1_0),
        ("METER_1_1", METER_1_1),
        ("METER_1_2", METER_1_2),
        ("POLARITY_OUT_1_0", POLARITY_OUT_1_0),
        ("PEQ_1_1", PEQ_1_1),
        ("PEQ_1_2", PEQ_1_2),
        ("PEQ_1_3", PEQ_1_3),
        ("PEQ_1_4", PEQ_1_4),
        ("PEQ_1_5", PEQ_1_5),
        ("PEQ_1_6", PEQ_1_6),
        ("PEQ_1_7", PEQ_1_7),
        ("PEQ_1_8", PEQ_1_8),
        ("PEQ_1_9", PEQ_1_9),
        ("PEQ_1_10", PEQ_1_10),
        ("BPF_1_1", BPF_1_1),
        ("BPF_1_5", BPF_1_5),
        ("D_GAIN_2_0_STATUS", D_GAIN_2_0_STATUS),
        ("COMP_2_0_STATUS", COMP_2_0_STATUS),
        ("D_GAIN_2_0", D_GAIN_2_0),
        ("COMP_2_0_THRESHOLD", COMP_2_0_THRESHOLD),
        ("COMP_2_0_GAIN", COMP_2_0_GAIN),
        ("COMP_2_0_RATIO", COMP_2_0_RATIO),
        ("COMP_2_0_KNEE", COMP_2_0_KNEE),
        ("COMP_2_0_ATIME", COMP_2_0_ATIME),
        ("COMP_2_0_RTIME", COMP_2_0_RTIME),
        ("DELAY_2_0", DELAY_2_0),
        ("METER_2_0", METER_2_0),
        ("METER_2_1", METER_2_1),
        ("METER_2_2", METER_2_2),
        ("POLARITY_OUT_2_0", POLARITY_OUT_2_0),
        ("PEQ_2_1", PEQ_2_1),
        ("PEQ_2_2", PEQ_2_2),
        ("PEQ_2_3", PEQ_2_3),
        ("PEQ_2_4", PEQ_2_4),
        ("PEQ_2_5", PEQ_2_5),
        ("PEQ_2_6", PEQ_2_6),
        ("PEQ_2_7", PEQ_2_7),
        ("PEQ_2_8", PEQ_2_8),
        ("PEQ_2_9", PEQ_2_9),
        ("PEQ_2_10", PEQ_2_10),
        ("BPF_2_1", BPF_2_1),
        ("BPF_2_5", BPF_2_5),
        ("D_GAIN_3_0_STATUS", D_GAIN_3_0_STATUS),
        ("COMP_3_0_STATUS", COMP_3_0_STATUS),
        ("D_GAIN_3_0", D_GAIN_3_0),
        ("COMP_3_0_THRESHOLD", COMP_3_0_THRESHOLD),
        ("COMP_3_0_GAIN", COMP_3_0_GAIN),
        ("COMP_3_0_RATIO", COMP_3_0_RATIO),
        ("COMP_3_0_KNEE", COMP_3_0_KNEE),
        ("COMP_3_0_ATIME", COMP_3_0_ATIME),
        ("COMP_3_0_RTIME", COMP_3_0_RTIME),
        ("DELAY_3_0", DELAY_3_0),
        ("METER_3_0", METER_3_0),
        ("METER_3_1", METER_3_1),
        ("METER_3_2", METER_3_2),
        ("POLARITY_OUT_3_0", POLARITY_OUT_3_0),
        ("PEQ_3_1", PEQ_3_1),
        ("PEQ_3_2", PEQ_3_2),
        ("PEQ_3_3", PEQ_3_3),
        ("PEQ_3_4", PEQ_3_4),
        ("PEQ_3_5", PEQ_3_5),
        ("PEQ_3_6", PEQ_3_6),
        ("PEQ_3_7", PEQ_3_7),
        ("PEQ_3_8", PEQ_3_8),
        ("PEQ_3_9", PEQ_3_9),
        ("PEQ_3_10", PEQ_3_10),
        ("BPF_3_1", BPF_3_1),
        ("BPF_3_5", BPF_3_5),
        ("D_GAIN_4_0_STATUS", D_GAIN_4_0_STATUS),
        ("COMP_4_0_STATUS", COMP_4_0_STATUS),
        ("D_GAIN_4_0", D_GAIN_4_0),
        ("COMP_4_0_THRESHOLD", COMP_4_0_THRESHOLD),
        ("COMP_4_0_GAIN", COMP_4_0_GAIN),
        ("COMP_4_0_RATIO", COMP_4_0_RATIO),
        ("COMP_4_0_KNEE", COMP_4_0_KNEE),
        ("COMP_4_0_ATIME", COMP_4_0_ATIME),
        ("COMP_4_0_RTIME", COMP_4_0_RTIME),
        ("DELAY_4_0", DELAY_4_0),
        ("METER_4_0", METER_4_0),
        ("METER_4_1", METER_4_1),
        ("METER_4_2", METER_4_2),
        ("POLARITY_OUT_4_0", POLARITY_OUT_4_0),
        ("PEQ_4_1", PEQ_4_1),
        ("PEQ_4_2", PEQ_4_2),
        ("PEQ_4_3", PEQ_4_3),
        ("PEQ_4_4", PEQ_4_4),
        ("PEQ_4_5", PEQ_4_5),
        ("PEQ_4_6", PEQ_4_6),
        ("PEQ_4_7", PEQ_4_7),
        ("PEQ_4_8", PEQ_4_8),
        ("PEQ_4_9", PEQ_4_9),
        ("PEQ_4_10", PEQ_4_10),
        ("BPF_4_1", BPF_4_1),
        ("BPF_4_5", BPF_4_5),
        ("D_GAIN_5_0_STATUS", D_GAIN_5_0_STATUS),
        ("COMP_5_0_STATUS", COMP_5_0_STATUS),
        ("D_GAIN_5_0", D_GAIN_5_0),
        ("COMP_5_0_THRESHOLD", COMP_5_0_THRESHOLD),
        ("COMP_5_0_GAIN", COMP_5_0_GAIN),
        ("COMP_5_0_RATIO", COMP_5_0_RATIO),
        ("COMP_5_0_KNEE", COMP_5_0_KNEE),
        ("COMP_5_0_ATIME", COMP_5_0_ATIME),
        ("COMP_5_0_RTIME", COMP_5_0_RTIME),
        ("DELAY_5_0", DELAY_5_0),
        ("METER_5_0", METER_5_0),
        ("METER_5_1", METER_5_1),
        ("METER_5_2", METER_5_2),
        ("POLARITY_OUT_5_0", POLARITY_OUT_5_0),
        ("PEQ_5_1", PEQ_5_1),
        ("PEQ_5_2", PEQ_5_2),
        ("PEQ_5_3", PEQ_5_3),
        ("PEQ_5_4", PEQ_5_4),
        ("PEQ_5_5", PEQ_5_5),
        ("PEQ_5_6", PEQ_5_6),
        ("PEQ_5_7", PEQ_5_7),
        ("PEQ_5_8", PEQ_5_8),
        ("PEQ_5_9", PEQ_5_9),
        ("PEQ_5_10", PEQ_5_10),
        ("BPF_5_1", BPF_5_1),
        ("BPF_5_5", BPF_5_5),
        ("D_GAIN_6_0_STATUS", D_GAIN_6_0_STATUS),
        ("COMP_6_0_STATUS", COMP_6_0_STATUS),
        ("D_GAIN_6_0", D_GAIN_6_0),
        ("COMP_6_0_THRESHOLD", COMP_6_0_THRESHOLD),
        ("COMP_6_0_GAIN", COMP_6_0_GAIN),
        ("COMP_6_0_RATIO", COMP_6_0_RATIO),
        ("COMP_6_0_KNEE", COMP_6_0_KNEE),
        ("COMP_6_0_ATIME", COMP_6_0_ATIME),
        ("COMP_6_0_RTIME", COMP_6_0_RTIME),
        ("DELAY_6_0", DELAY_6_0),
        ("METER_6_0", METER_6_0),
        ("METER_6_1", METER_6_1),
        ("METER_6_2", METER_6_2),
        ("POLARITY_OUT_6_0", POLARITY_OUT_6_0),
        ("PEQ_6_1", PEQ_6_1),
        ("PEQ_6_2", PEQ_6_2),
        ("PEQ_6_3", PEQ_6_3),
        ("PEQ_6_4", PEQ_6_4),
        ("PEQ_6_5", PEQ_6_5),
        ("PEQ_6_6", PEQ_6_6),
        ("PEQ_6_7", PEQ_6_7),
        ("PEQ_6_8", PEQ_6_8),
        ("PEQ_6_9", PEQ_6_9),
        ("PEQ_6_10", PEQ_6_10),
        ("BPF_6_1", BPF_6_1),
        ("BPF_6_5", BPF_6_5),
        ("D_GAIN_7_0_STATUS", D_GAIN_7_0_STATUS),
        ("COMP_7_0_STATUS", COMP_7_0_STATUS),
        ("D_GAIN_7_0", D_GAIN_7_0),
        ("COMP_7_0_THRESHOLD", COMP_7_0_THRESHOLD),
        ("COMP_7_0_GAIN", COMP_7_0_GAIN),
        ("COMP_7_0_RATIO", COMP_7_0_RATIO),
        ("COMP_7_0_KNEE", COMP_7_0_KNEE),
        ("COMP_7_0_ATIME", COMP_7_0_ATIME),
        ("COMP_7_0_RTIME", COMP_7_0_RTIME),
        ("DELAY_7_0", DELAY_7_0),
        ("METER_7_0", METER_7_0),
        ("METER_7_1", METER_7_1),
        ("METER_7_2", METER_7_2),
        ("POLARITY_OUT_7_0", POLARITY_OUT_7_0),
        ("PEQ_7_1", PEQ_7_1),
        ("PEQ_7_2", PEQ_7_2),
        ("PEQ_7_3", PEQ_7_3),
        ("PEQ_7_4", PEQ_7_4),
        ("PEQ_7_5", PEQ_7_5),
        ("PEQ_7_6", PEQ_7_6),
        ("PEQ_7_7", PEQ_7_7),
        ("PEQ_7_8", PEQ_7_8),
        ("PEQ_7_9", PEQ_7_9),
        ("PEQ_7_10", PEQ_7_10),
        ("BPF_7_1", BPF_7_1),
        ("BPF_7_5", BPF_7_5),
        ("D_GAIN_8_0_STATUS", D_GAIN_8_0_STATUS),
        ("COMP_8_0_STATUS", COMP_8_0_STATUS),
        ("D_GAIN_8_0", D_GAIN_8_0),
        ("COMP_8_0_THRESHOLD", COMP_8_0_THRESHOLD),
        ("COMP_8_0_GAIN", COMP_8_0_GAIN),
        ("COMP_8_0_RATIO", COMP_8_0_RATIO),
        ("COMP_8_0_KNEE", COMP_8_0_KNEE),
        ("COMP_8_0_ATIME", COMP_8_0_ATIME),
        ("COMP_8_0_RTIME", COMP_8_0_RTIME),
        ("DELAY_8_0", DELAY_8_0),
        ("METER_8_0", METER_8_0),
        ("METER_8_1", METER_8_1),
        ("METER_8_2", METER_8_2),
        ("POLARITY_OUT_8_0", POLARITY_OUT_8_0),
        ("PEQ_8_1", PEQ_8_1),
        ("PEQ_8_2", PEQ_8_2),
        ("PEQ_8_3", PEQ_8_3),
        ("PEQ_8_4", PEQ_8_4),
        ("PEQ_8_5", PEQ_8_5),
        ("PEQ_8_6", PEQ_8_6),
        ("PEQ_8_7", PEQ_8_7),
        ("PEQ_8_8", PEQ_8_8),
        ("PEQ_8_9", PEQ_8_9),
        ("PEQ_8_10", PEQ_8_10),
        ("BPF_8_1", BPF_8_1),
        ("BPF_8_5", BPF_8_5),
    ];
}
#[allow(unused_imports)]
use sym::*;
pub const DEVICE: Device = Device {
    product_name: "DDRC-88BM",
    sources: &[Analog, Toslink, Usb],
    inputs: &[
        Input {
            gate: None,
            meter: Some(METER_IN_1),
            routing: &[
                Gate {
                    enable: BM_MIXER_1_1_STATUS,
                    gain: BM_MIXER_1_1,
                },
                Gate {
                    enable: BM_MIXER_1_2_STATUS,
                    gain: BM_MIXER_1_2,
                },
                Gate {
                    enable: BM_MIXER_1_3_STATUS,
                    gain: BM_MIXER_1_3,
                },
                Gate {
                    enable: BM_MIXER_1_4_STATUS,
                    gain: BM_MIXER_1_4,
                },
                Gate {
                    enable: BM_MIXER_1_5_STATUS,
                    gain: BM_MIXER_1_5,
                },
                Gate {
                    enable: BM_MIXER_1_6_STATUS,
                    gain: BM_MIXER_1_6,
                },
                Gate {
                    enable: BM_MIXER_1_7_STATUS,
                    gain: BM_MIXER_1_7,
                },
                Gate {
                    enable: BM_MIXER_1_8_STATUS,
                    gain: BM_MIXER_1_8,
                },
            ],
            peq: &[],
        },
        Input {
            gate: None,
            meter: Some(METER_IN_2),
            routing: &[
                Gate {
                    enable: BM_MIXER_2_1_STATUS,
                    gain: BM_MIXER_2_1,
                },
                Gate {
                    enable: BM_MIXER_2_2_STATUS,
                    gain: BM_MIXER_2_2,
                },
                Gate {
                    enable: BM_MIXER_2_3_STATUS,
                    gain: BM_MIXER_2_3,
                },
                Gate {
                    enable: BM_MIXER_2_4_STATUS,
                    gain: BM_MIXER_2_4,
                },
                Gate {
                    enable: BM_MIXER_2_5_STATUS,
                    gain: BM_MIXER_2_5,
                },
                Gate {
                    enable: BM_MIXER_2_6_STATUS,
                    gain: BM_MIXER_2_6,
                },
                Gate {
                    enable: BM_MIXER_2_7_STATUS,
                    gain: BM_MIXER_2_7,
                },
                Gate {
                    enable: BM_MIXER_2_8_STATUS,
                    gain: BM_MIXER_2_8,
                },
            ],
            peq: &[],
        },
        Input {
            gate: None,
            meter: Some(METER_IN_3),
            routing: &[
                Gate {
                    enable: BM_MIXER_3_1_STATUS,
                    gain: BM_MIXER_3_1,
                },
                Gate {
                    enable: BM_MIXER_3_2_STATUS,
                    gain: BM_MIXER_3_2,
                },
                Gate {
                    enable: BM_MIXER_3_3_STATUS,
                    gain: BM_MIXER_3_3,
                },
                Gate {
                    enable: BM_MIXER_3_4_STATUS,
                    gain: BM_MIXER_3_4,
                },
                Gate {
                    enable: BM_MIXER_3_5_STATUS,
                    gain: BM_MIXER_3_5,
                },
                Gate {
                    enable: BM_MIXER_3_6_STATUS,
                    gain: BM_MIXER_3_6,
                },
                Gate {
                    enable: BM_MIXER_3_7_STATUS,
                    gain: BM_MIXER_3_7,
                },
                Gate {
                    enable: BM_MIXER_3_8_STATUS,
                    gain: BM_MIXER_3_8,
                },
            ],
            peq: &[],
        },
        Input {
            gate: None,
            meter: Some(METER_IN_4),
            routing: &[
                Gate {
                    enable: BM_MIXER_4_1_STATUS,
                    gain: BM_MIXER_4_1,
                },
                Gate {
                    enable: BM_MIXER_4_2_STATUS,
                    gain: BM_MIXER_4_2,
                },
                Gate {
                    enable: BM_MIXER_4_3_STATUS,
                    gain: BM_MIXER_4_3,
                },
                Gate {
                    enable: BM_MIXER_4_4_STATUS,
                    gain: BM_MIXER_4_4,
                },
                Gate {
                    enable: BM_MIXER_4_5_STATUS,
                    gain: BM_MIXER_4_5,
                },
                Gate {
                    enable: BM_MIXER_4_6_STATUS,
                    gain: BM_MIXER_4_6,
                },
                Gate {
                    enable: BM_MIXER_4_7_STATUS,
                    gain: BM_MIXER_4_7,
                },
                Gate {
                    enable: BM_MIXER_4_8_STATUS,
                    gain: BM_MIXER_4_8,
                },
            ],
            peq: &[],
        },
        Input {
            gate: None,
            meter: Some(METER_IN_5),
            routing: &[
                Gate {
                    enable: BM_MIXER_5_1_STATUS,
                    gain: BM_MIXER_5_1,
                },
                Gate {
                    enable: BM_MIXER_5_2_STATUS,
                    gain: BM_MIXER_5_2,
                },
                Gate {
                    enable: BM_MIXER_5_3_STATUS,
                    gain: BM_MIXER_5_3,
                },
                Gate {
                    enable: BM_MIXER_5_4_STATUS,
                    gain: BM_MIXER_5_4,
                },
                Gate {
                    enable: BM_MIXER_5_5_STATUS,
                    gain: BM_MIXER_5_5,
                },
                Gate {
                    enable: BM_MIXER_5_6_STATUS,
                    gain: BM_MIXER_5_6,
                },
                Gate {
                    enable: BM_MIXER_5_7_STATUS,
                    gain: BM_MIXER_5_7,
                },
                Gate {
                    enable: BM_MIXER_5_8_STATUS,
                    gain: BM_MIXER_5_8,
                },
            ],
            peq: &[],
        },
        Input {
            gate: None,
            meter: Some(METER_IN_6),
            routing: &[
                Gate {
                    enable: BM_MIXER_6_1_STATUS,
                    gain: BM_MIXER_6_1,
                },
                Gate {
                    enable: BM_MIXER_6_2_STATUS,
                    gain: BM_MIXER_6_2,
                },
                Gate {
                    enable: BM_MIXER_6_3_STATUS,
                    gain: BM_MIXER_6_3,
                },
                Gate {
                    enable: BM_MIXER_6_4_STATUS,
                    gain: BM_MIXER_6_4,
                },
                Gate {
                    enable: BM_MIXER_6_5_STATUS,
                    gain: BM_MIXER_6_5,
                },
                Gate {
                    enable: BM_MIXER_6_6_STATUS,
                    gain: BM_MIXER_6_6,
                },
                Gate {
                    enable: BM_MIXER_6_7_STATUS,
                    gain: BM_MIXER_6_7,
                },
                Gate {
                    enable: BM_MIXER_6_8_STATUS,
                    gain: BM_MIXER_6_8,
                },
            ],
            peq: &[],
        },
        Input {
            gate: None,
            meter: Some(METER_IN_7),
            routing: &[
                Gate {
                    enable: BM_MIXER_7_1_STATUS,
                    gain: BM_MIXER_7_1,
                },
                Gate {
                    enable: BM_MIXER_7_2_STATUS,
                    gain: BM_MIXER_7_2,
                },
                Gate {
                    enable: BM_MIXER_7_3_STATUS,
                    gain: BM_MIXER_7_3,
                },
                Gate {
                    enable: BM_MIXER_7_4_STATUS,
                    gain: BM_MIXER_7_4,
                },
                Gate {
                    enable: BM_MIXER_7_5_STATUS,
                    gain: BM_MIXER_7_5,
                },
                Gate {
                    enable: BM_MIXER_7_6_STATUS,
                    gain: BM_MIXER_7_6,
                },
                Gate {
                    enable: BM_MIXER_7_7_STATUS,
                    gain: BM_MIXER_7_7,
                },
                Gate {
                    enable: BM_MIXER_7_8_STATUS,
                    gain: BM_MIXER_7_8,
                },
            ],
            peq: &[],
        },
        Input {
            gate: None,
            meter: Some(METER_IN_8),
            routing: &[
                Gate {
                    enable: BM_MIXER_8_1_STATUS,
                    gain: BM_MIXER_8_1,
                },
                Gate {
                    enable: BM_MIXER_8_2_STATUS,
                    gain: BM_MIXER_8_2,
                },
                Gate {
                    enable: BM_MIXER_8_3_STATUS,
                    gain: BM_MIXER_8_3,
                },
                Gate {
                    enable: BM_MIXER_8_4_STATUS,
                    gain: BM_MIXER_8_4,
                },
                Gate {
                    enable: BM_MIXER_8_5_STATUS,
                    gain: BM_MIXER_8_5,
                },
                Gate {
                    enable: BM_MIXER_8_6_STATUS,
                    gain: BM_MIXER_8_6,
                },
                Gate {
                    enable: BM_MIXER_8_7_STATUS,
                    gain: BM_MIXER_8_7,
                },
                Gate {
                    enable: BM_MIXER_8_8_STATUS,
                    gain: BM_MIXER_8_8,
                },
            ],
            peq: &[],
        },
    ],
    outputs: &[
        Output {
            gate: Gate {
                enable: D_GAIN_1_0_STATUS,
                gain: D_GAIN_1_0,
            },
            meter: METER_OUT_1,
            delay_addr: DELAY_1_0,
            invert_addr: POLARITY_OUT_1_0,
            peq: &[
                PEQ_1_10, PEQ_1_9, PEQ_1_8, PEQ_1_7, PEQ_1_6, PEQ_1_5, PEQ_1_4, PEQ_1_3, PEQ_1_2,
                PEQ_1_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_1_1, BPF_1_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_1_0_STATUS,
                threshold: COMP_1_0_THRESHOLD,
                ratio: COMP_1_0_RATIO,
                attack: COMP_1_0_ATIME,
                release: COMP_1_0_RTIME,
                meter: Some(METER_COMP_1),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_2_0_STATUS,
                gain: D_GAIN_2_0,
            },
            meter: METER_OUT_2,
            delay_addr: DELAY_2_0,
            invert_addr: POLARITY_OUT_2_0,
            peq: &[
                PEQ_2_10, PEQ_2_9, PEQ_2_8, PEQ_2_7, PEQ_2_6, PEQ_2_5, PEQ_2_4, PEQ_2_3, PEQ_2_2,
                PEQ_2_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_2_1, BPF_2_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_2_0_STATUS,
                threshold: COMP_2_0_THRESHOLD,
                ratio: COMP_2_0_RATIO,
                attack: COMP_2_0_ATIME,
                release: COMP_2_0_RTIME,
                meter: Some(METER_COMP_2),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_3_0_STATUS,
                gain: D_GAIN_3_0,
            },
            meter: METER_OUT_3,
            delay_addr: DELAY_3_0,
            invert_addr: POLARITY_OUT_3_0,
            peq: &[
                PEQ_3_10, PEQ_3_9, PEQ_3_8, PEQ_3_7, PEQ_3_6, PEQ_3_5, PEQ_3_4, PEQ_3_3, PEQ_3_2,
                PEQ_3_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_3_1, BPF_3_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_3_0_STATUS,
                threshold: COMP_3_0_THRESHOLD,
                ratio: COMP_3_0_RATIO,
                attack: COMP_3_0_ATIME,
                release: COMP_3_0_RTIME,
                meter: Some(METER_COMP_3),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_4_0_STATUS,
                gain: D_GAIN_4_0,
            },
            meter: METER_OUT_4,
            delay_addr: DELAY_4_0,
            invert_addr: POLARITY_OUT_4_0,
            peq: &[
                PEQ_4_10, PEQ_4_9, PEQ_4_8, PEQ_4_7, PEQ_4_6, PEQ_4_5, PEQ_4_4, PEQ_4_3, PEQ_4_2,
                PEQ_4_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_4_1, BPF_4_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_4_0_STATUS,
                threshold: COMP_4_0_THRESHOLD,
                ratio: COMP_4_0_RATIO,
                attack: COMP_4_0_ATIME,
                release: COMP_4_0_RTIME,
                meter: Some(METER_COMP_4),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_5_0_STATUS,
                gain: D_GAIN_5_0,
            },
            meter: METER_OUT_5,
            delay_addr: DELAY_5_0,
            invert_addr: POLARITY_OUT_5_0,
            peq: &[
                PEQ_5_10, PEQ_5_9, PEQ_5_8, PEQ_5_7, PEQ_5_6, PEQ_5_5, PEQ_5_4, PEQ_5_3, PEQ_5_2,
                PEQ_5_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_5_1, BPF_5_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_5_0_STATUS,
                threshold: COMP_5_0_THRESHOLD,
                ratio: COMP_5_0_RATIO,
                attack: COMP_5_0_ATIME,
                release: COMP_5_0_RTIME,
                meter: Some(METER_COMP_5),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_6_0_STATUS,
                gain: D_GAIN_6_0,
            },
            meter: METER_OUT_6,
            delay_addr: DELAY_6_0,
            invert_addr: POLARITY_OUT_6_0,
            peq: &[
                PEQ_6_10, PEQ_6_9, PEQ_6_8, PEQ_6_7, PEQ_6_6, PEQ_6_5, PEQ_6_4, PEQ_6_3, PEQ_6_2,
                PEQ_6_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_6_1, BPF_6_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_6_0_STATUS,
                threshold: COMP_6_0_THRESHOLD,
                ratio: COMP_6_0_RATIO,
                attack: COMP_6_0_ATIME,
                release: COMP_6_0_RTIME,
                meter: Some(METER_COMP_6),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_7_0_STATUS,
                gain: D_GAIN_7_0,
            },
            meter: METER_OUT_7,
            delay_addr: DELAY_7_0,
            invert_addr: POLARITY_OUT_7_0,
            peq: &[
                PEQ_7_10, PEQ_7_9, PEQ_7_8, PEQ_7_7, PEQ_7_6, PEQ_7_5, PEQ_7_4, PEQ_7_3, PEQ_7_2,
                PEQ_7_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_7_1, BPF_7_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_7_0_STATUS,
                threshold: COMP_7_0_THRESHOLD,
                ratio: COMP_7_0_RATIO,
                attack: COMP_7_0_ATIME,
                release: COMP_7_0_RTIME,
                meter: Some(METER_COMP_7),
            }),
            fir: None,
        },
        Output {
            gate: Gate {
                enable: D_GAIN_8_0_STATUS,
                gain: D_GAIN_8_0,
            },
            meter: METER_OUT_8,
            delay_addr: DELAY_8_0,
            invert_addr: POLARITY_OUT_8_0,
            peq: &[
                PEQ_8_10, PEQ_8_9, PEQ_8_8, PEQ_8_7, PEQ_8_6, PEQ_8_5, PEQ_8_4, PEQ_8_3, PEQ_8_2,
                PEQ_8_1,
            ],
            xover: Some(Crossover {
                peqs: &[BPF_8_1, BPF_8_5],
            }),
            compressor: Some(Compressor {
                bypass: COMP_8_0_STATUS,
                threshold: COMP_8_0_THRESHOLD,
                ratio: COMP_8_0_RATIO,
                attack: COMP_8_0_ATIME,
                release: COMP_8_0_RTIME,
                meter: Some(METER_COMP_8),
            }),
            fir: None,
        },
    ],
    fir_max_taps: 0,
    internal_sampling_rate: 48000,
    delay_mode: DelayMode::Samples,
    #[cfg(feature = "symbols")]
    symbols: SYMBOLS,
};
